{"version":3,"sources":["images/Brewdog-logo.png","serviceWorker.js","components/Beer.jsx","components/Results.jsx","components/Favorites.jsx","components/Navbar.jsx","components/Signup.jsx","components/Login.jsx","components/App.jsx","history.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Beer","trimDescription","descriptionArr","_this","props","attributes","description","split","length","i","word","wordLimit","charAt","slice","concat","addToFavorites","removeFromFavorites","addButton","react_default","a","createElement","className","onClick","src","this","img","alt","name","React","Component","Results","displayButton","displayBeers","beerList","map","beer","components_Beer","key","id","beerKey","Favorites","favoriteList","Navbar","getAndDisplayBeers","searchValue","document","forms","value","submit","e","preventDefault","redirect","target","resetAndRedirect","history","push","innerHTML","constructDropdown","loggedIn","Dropdown","Toggle","variant","firstname","Menu","Item","signOut","logo","onSubmit","type","placeholder","favoriteNum","Signup","formHandler","signupForm","displayWarningText","userInfo","lastname","email","password","signUp","warningText","ReactDOM","render","role","getElementById","url","arguments","undefined","data","fetch","method","body","JSON","stringify","headers","Content-Type","then","response","json","statusCode","message","catch","error","console","stack","required","Login","loginForm","login","_callee","_args","regenerator_default","wrap","_context","prev","next","credentials","sent","status","updateFavoritesFromLogin","beerIDs","t0","abrupt","stop","href","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","searchTerm","state","jsonIndex","page","setState","haventSearched","numBeers","makeBeerListThenDisplay","app","image_url","trueOrFalse","find","beer1","newFavoriteList","localStorage","setItem","_ref","asyncToGenerator","mark","fullInfoBeers","_loop","favoriteListDB","beerID","parseInt","createURLForStoredBeerIDs","_x","apply","route","beerIndex","findIndex","splice","_callee2","_context2","favoriteListFromDB","parse","getItem","pathname","res","_context3","_this2","react_router","path","components_Navbar","assign","exact","components_Login","components_Signup","components_Results","components_Favorites","createBrowserHistory","components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wUCYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,yIC6CSC,0NA3DbC,gBAAkB,WAChB,IAAIC,EAAiBC,EAAKC,MAAMC,WAAWC,YAAYC,MAAM,KAE7D,GAAIL,EAAeM,QADH,GAEd,OAAOL,EAAKC,MAAMC,WAAWC,YAG/B,IADA,IAAIA,EAAc,GACTG,EAAI,EAAGA,EALA,GAKeA,IAAK,CAClC,IAAIC,EAAOR,EAAeO,GAChBE,KAANF,GACmC,MAAjCC,EAAKE,OAAOF,EAAKF,OAAS,KAC5BE,EAAOA,EAAKG,MAAM,EAAGH,EAAKF,OAAS,IAErCF,GAAW,GAAAQ,OAAOJ,EAAP,QAGXJ,GAAW,GAAAQ,OAAOJ,EAAP,KAGf,OAAOJ,KAGTS,eAAiB,WACfZ,EAAKC,MAAMW,eAAeZ,EAAKC,MAAMC,eAGvCW,oBAAsB,WACpBb,EAAKC,MAAMY,oBAAoBb,EAAKC,MAAMC,eAG5CY,UAAY,WACV,OAAId,EAAKC,MAAMW,eACLG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACvBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0BAA0BC,QAASnB,EAAKY,gBAA1D,qBAGOZ,EAAKC,MAAMY,oBACVE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACvBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0BAA0BC,QAASnB,EAAKa,qBAA1D,+BAFG,2EAQL,OAAQE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oDACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWE,IAAKC,KAAKpB,MAAMC,WAAWoB,IAAKC,IAAI,UAElER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAaG,KAAKpB,MAAMC,WAAWsB,MACjDT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBG,KAAKvB,qBAG3CuB,KAAKP,oBAvDDW,IAAMC,YC2BVC,6MAzBbC,cAAgB,WACd,IAAiC,IAA7B5B,EAAKC,MAAM2B,cACb,OAAOb,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBC,QAASnB,EAAKC,MAAM4B,cAA7D,gBAIXA,aAAe,WACb,GAA4B,OAAxB7B,EAAKC,MAAM6B,SACb,OAAO9B,EAAKC,MAAM6B,SAASC,IAAI,SAAAC,GAAI,OAAIjB,EAAAC,EAAAC,cAACgB,EAAD,CAAMC,IAAKF,EAAKG,GAAIC,QAASJ,EAAKG,GAAIjC,WAAY8B,EAAMpB,eAAgBZ,EAAKC,MAAMW,4FAK5H,OACEG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKkB,GAAG,SACLd,KAAKQ,gBAERd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DAA6DiB,GAAG,uBAA/E,uBAA0Hd,KAAKO,yBAnBjHH,IAAMC,WCWbW,0LAVF,IAAArC,EAAAqB,KACL,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACVG,KAAKpB,MAAMqC,aAAaP,IAAI,SAAAC,GAAI,OAAIjB,EAAAC,EAAAC,cAACgB,EAAD,CAAMC,IAAKF,EAAKG,GAAIC,QAASJ,EAAKG,GAAIjC,WAAY8B,EAAMnB,oBAAqBb,EAAKC,MAAMY,gCAJrHY,IAAMC,6CCsEfa,6MApEbC,mBAAqB,WACnB,IAAIC,EAAcC,SAASC,MAAM,eAAf,OAAwCC,MAC1DF,SAASC,MAAM,eAAf,OAAwCC,MAAQ,KAChD5C,EAAKC,MAAMuC,mBAAmBC,MAGhCI,OAAS,SAACC,GACRA,EAAEC,iBACF/C,EAAKwC,wBAGPQ,SAAW,SAACF,GACU,SAAhBA,EAAEG,OAAOd,GACXnC,EAAKC,MAAMiD,iBAAiB,IACH,kBAAhBJ,EAAEG,OAAOd,GAClBnC,EAAKC,MAAMkD,QAAQC,KAAK,aACQ,YAAvBN,EAAEG,OAAOI,UAClBrD,EAAKC,MAAMkD,QAAQC,KAAK,SACQ,YAAvBN,EAAEG,OAAOI,WAClBrD,EAAKC,MAAMkD,QAAQC,KAAK,aAI5BE,kBAAoB,WAClB,OAAKtD,EAAKC,MAAMsD,SAaNxC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAUtC,UAAU,QAClBH,EAAAC,EAAAC,cAACuC,EAAA,EAASC,OAAV,CAAiBC,QAAQ,kBAAkBvB,GAAG,kBAA9C,YAAAxB,OACYX,EAAKC,MAAM0D,YAGvB5C,EAAAC,EAAAC,cAACuC,EAAA,EAASI,KAAV,KACE7C,EAAAC,EAAAC,cAACuC,EAAA,EAASK,KAAV,CAAe1C,QAASnB,EAAKC,MAAM6D,SAAnC,cAlBJ/C,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAUtC,UAAU,QAClBH,EAAAC,EAAAC,cAACuC,EAAA,EAASC,OAAV,CAAiBC,QAAQ,kBAAkBvB,GAAG,kBAA9C,WAIApB,EAAAC,EAAAC,cAACuC,EAAA,EAASI,KAAV,KACE7C,EAAAC,EAAAC,cAACuC,EAAA,EAASK,KAAV,CAAe1C,QAASnB,EAAKgD,UAA7B,WACAjC,EAAAC,EAAAC,cAACuC,EAAA,EAASK,KAAV,CAAe1C,QAASnB,EAAKgD,UAA7B,sFAkBd,OACEjC,EAAAC,EAAAC,cAAA,OAAKkB,GAAG,SAASjB,UAAU,4DACzBH,EAAAC,EAAAC,cAAA,OAAKkB,GAAG,iBAAiBhB,QAASE,KAAK2B,UACrCjC,EAAAC,EAAAC,cAAA,OAAKkB,GAAG,OAAOf,IAAK2C,OAEtBhD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,+BAA+BM,KAAK,cAAcW,GAAG,cAAc6B,SAAU3C,KAAKwB,QAC9F9B,EAAAC,EAAAC,cAAA,SAAOkB,GAAG,SAAS8B,KAAK,OAAO/C,UAAU,uDAAuDgD,YAAY,qBAAqB1C,KAAK,WACtIT,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAgC+C,KAAK,SAAS9B,GAAG,cAAnE,WAEHd,KAAKiC,oBACNvC,EAAAC,EAAAC,cAAA,UAAQgD,KAAK,SAAS/C,UAAU,kBAAkBC,QAASE,KAAK2B,SAAUb,GAAG,iBACzEpB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,aAAwCH,EAAAC,EAAAC,cAAA,QAAMkB,GAAG,QAAQjB,UAAU,qBAAqBG,KAAKpB,MAAMkE,uBA9D1F1C,IAAMC,WCoEZ0C,oNApEXpB,SAAW,SAACF,OAGZuB,YAAc,SAACvB,GACXA,EAAEC,iBACF,IAAIuB,EAAa5B,SAASC,MAAM,eAC5B2B,EAAU,UAAc1B,QAAU0B,EAAU,UAAc1B,OAC1D5C,EAAKuE,mBAAmB,2BAE5B,IAAIC,EAAW,CAACb,UAAWW,EAAU,UAAc1B,MACnC6B,SAAUH,EAAU,SAAa1B,MACjC8B,MAAOJ,EAAU,MAAU1B,MAC3B+B,SAAUL,EAAU,UAAc1B,OAClD5C,EAAK4E,OAAO,+BAAgCJ,MAGhDD,mBAAqB,SAACM,GAClBC,IAASC,OAAOhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mFAAmF8D,KAAK,SACtHH,GAAoBnC,SAASuC,eAAe,uBAGjDL,OAAS,WAAyB,IAAxBM,EAAwBC,UAAA9E,OAAA,QAAA+E,IAAAD,UAAA,GAAAA,UAAA,GAAlB,GAAIE,EAAcF,UAAA9E,OAAA,QAAA+E,IAAAD,UAAA,GAAAA,UAAA,GAAP,GACvBG,MAAMJ,EAAK,CACPK,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACE,GACqB,IAApBA,EAAKC,WACLhG,EAAKC,MAAMkD,QAAQC,KAAK,UAGxBpD,EAAKuE,mBAAmBwB,EAAKE,WAIpCC,MAAM,SAACC,GACJC,QAAQD,MAAMA,EAAME,kFAMxB,OACItF,EAAAC,EAAAC,cAAA,OAAKkB,GAAG,oBAAoBjB,UAAU,+CAClCH,EAAAC,EAAAC,cAAA,OAAKkB,GAAG,oBACRpB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kGAAkGiB,GAAG,eAAe6B,SAAU3C,KAAKgD,YAAa7C,KAAK,eACjKT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4EACXH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,OAAO/C,UAAU,oBAAoBgD,YAAY,aAAa1C,KAAK,YAAY8E,UAAQ,IACnGvF,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,OAAO/C,UAAU,eAAegD,YAAY,YAAY1C,KAAK,WAAW8E,UAAQ,KAEhGvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,QAAQ/C,UAAU,eAAegD,YAAY,QAAQ1C,KAAK,QAAQ8E,UAAQ,KAE1FvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,WAAW/C,UAAU,oBAAoBgD,YAAY,WAAW1C,KAAK,YAAY8E,UAAQ,IACrGvF,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,WAAW/C,UAAU,eAAegD,YAAY,mBAAmB1C,KAAK,YAAY8E,UAAQ,KAE5GvF,EAAAC,EAAAC,cAAA,UAAQgD,KAAK,SAAS9B,GAAG,cAAcjB,UAAU,6CAAjD,oBA9DCO,IAAMC,YC8DZ6E,oNA7DXlC,YAAc,SAACvB,GACXA,EAAEC,iBACF,IAAIyD,EAAY9D,SAASC,MAAM,cAC3B6B,EAAW,CAACE,MAAO8B,EAAS,MAAU5D,MAC1B+B,SAAU6B,EAAS,SAAa5D,OAChD5C,EAAKyG,MAAM,8BAA+BjC,MAI9CD,mBAAqB,SAACM,GAClBC,IAASC,OAAOhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mFAAmF8D,KAAK,SACtHH,GAAoBnC,SAASuC,eAAe,qBAGjDwB,2BAAQ,SAAAC,IAAA,IAAAxB,EAAAG,EAAAS,EAAAC,EAAAY,EAAAxB,UAAA,OAAAyB,EAAA5F,EAAA6F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAM9B,EAANyB,EAAAtG,OAAA,QAAA+E,IAAAuB,EAAA,GAAAA,EAAA,GAAY,GAAItB,EAAhBsB,EAAAtG,OAAA,QAAA+E,IAAAuB,EAAA,GAAAA,EAAA,GAAuB,GAAvBG,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEqB1B,MAAMJ,EAAK,CAC5BK,OAAQ,OACR0B,YAAa,UACbzB,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACLC,eAAgB,sBAPxB,UAUwB,OARpBE,EAFJgB,EAAAI,MAUaC,OAVb,CAAAL,EAAAE,KAAA,SAWIhH,EAAKuE,mBAAmB,uCAX5BuC,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAcqBlB,EAASC,OAd9B,QAe4B,KADpBA,EAdRe,EAAAI,MAealB,aACLhG,EAAKC,MAAMmH,yBAAyBrB,EAAKsB,SACzCrH,EAAKC,MAAMiD,iBAAiB,GAAI6C,EAAKpC,YAjB7C,QAAAmD,EAAAE,KAAA,wBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAqBAV,QAAQD,MAAMW,EAAAQ,GAAMjB,OArBpBS,EAAAS,OAAA,2CAAAT,EAAAU,SAAAd,EAAA,0FA2BJ,OACI3F,EAAAC,EAAAC,cAAA,OAAKkB,GAAG,kBAAkBjB,UAAU,+CAChCH,EAAAC,EAAAC,cAAA,OAAKkB,GAAG,kBACRpB,EAAAC,EAAAC,cAAA,QAAMkB,GAAG,aAAajB,UAAU,kGAAkG8C,SAAU3C,KAAKgD,YAAa7C,KAAK,cAC/JT,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,QAAQ/C,UAAU,0BAA0BgD,YAAY,QAAQ1C,KAAK,QAAQW,GAAG,QAAQmE,UAAQ,IAC5GvF,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,WAAW/C,UAAU,0BAA0BgD,YAAY,WAAW1C,KAAK,WAAWW,GAAG,WAAWmE,UAAQ,IACxHvF,EAAAC,EAAAC,cAAA,UAAQgD,KAAK,SAAS/C,UAAU,uDAAuDiB,GAAG,WAA1F,WACApB,EAAAC,EAAAC,cAAA,OAAKkB,GAAG,gBAAgBjB,UAAU,6EAA6E8D,KAAK,SAChHjE,EAAAC,EAAAC,cAAA,gCAAuBF,EAAAC,EAAAC,cAAA,KAAGwG,KAAK,UAAUvG,UAAU,cAA5B,QAAvB,eAlDJO,IAAMC,YCqSXgG,qBA/RX,SAAAA,EAAYzH,GAAO,IAAAD,EAAA2H,OAAAC,EAAA,EAAAD,CAAAtG,KAAAqG,IACf1H,EAAA2H,OAAAE,EAAA,EAAAF,CAAAtG,KAAAsG,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA1G,KAAMpB,KA0BVuC,mBAAqB,SAACwF,GACC,KAAfA,IAGAA,IAAehI,EAAKiI,MAAMD,aACtBhI,EAAKiI,MAAMC,UAAYlI,EAAKiI,MAAMlC,KAAK1F,QAAUL,EAAKiI,MAAMlC,KAAK1F,OAAS,KAIlFiF,MAAK,yCAAA3E,OAA0CX,EAAKiI,MAAME,KAArD,2BAAAxH,OAAmFqH,IACvFnC,KAAK,SAACC,GACL,OAAOA,EAASC,SAEjBF,KAAK,SAACE,GACe,IAAhBA,EAAK1F,SAGA2H,IAAehI,EAAKiI,MAAMD,WACjChI,EAAKoI,SAAS,CAACrC,KAAMA,EACNmC,UAAW,GAAI,WACZlI,EAAK6B,iBAIvB7B,EAAKoI,SAAS,CAACrC,KAAMA,EACNmC,UAAW,EACXF,WAAYA,EACZG,KAAM,EACNrG,SAAU,KACVuG,gBAAgB,GAAQ,WACrBrI,EAAK6B,oBAI1BqE,MAAM,SAACC,GACNC,QAAQD,MAAMA,OA9DDnG,EAkEnB6B,aAAe,WACX,IAAIyG,EAAWtI,EAAKiI,MAAMlC,KAAK1F,OAASL,EAAKiI,MAAMC,UAC/CI,GAAY,EACZtI,EAAKuI,wBAAwB,GAEX,IAAbD,EACLtI,EAAKuI,wBAAwBD,GAEG,KAA3BtI,EAAKiI,MAAMlC,KAAK1F,OACrBL,EAAKoI,SAAS,CAACD,KAAMnI,EAAKC,MAAMuI,IAAIP,MAAME,KAAO,GAAI,WACrDnI,EAAKwC,mBAAmBxC,EAAKiI,MAAMD,cAInChI,EAAKoI,SAAS,CAACD,KAAMnI,EAAKC,MAAMuI,IAAIP,MAAME,KAAO,GAAI,eAhF1CnI,EAsFnBuI,wBAA0B,SAACD,GACvB,IAAIxG,EAAW,GACf,GAA2B,MAAvB9B,EAAKiI,MAAMnG,SACb,IAAK,IAAIxB,EAAI,EAAGA,EAAIN,EAAKiI,MAAMnG,SAASzB,OAAQC,IAC5CwB,EAASsB,KAAKpD,EAAKiI,MAAMnG,SAASxB,IAIxC,IADA,IAAI4H,EAAYlI,EAAKiI,MAAMC,UAClB5H,EAAI,EAAGA,EAAIgI,EAAUhI,IAC1BwB,EAASsB,KAAK,CAACjB,GAAInC,EAAKiI,MAAMlC,KAAKmC,GAAW/F,GAC/Bb,IAAKtB,EAAKiI,MAAMlC,KAAKmC,GAAWO,UAChCjH,KAAMxB,EAAKiI,MAAMlC,KAAKmC,GAAW1G,KACjCrB,YAAaH,EAAKiI,MAAMlC,KAAKmC,GAAW/H,cACvD+H,IAEJlI,EAAKoI,SAAS,CAACtG,SAAUA,EAAUoG,UAAWA,GAAY,WACtD,IAAIQ,EAEAA,EADA1I,EAAKiI,MAAMC,YAAclI,EAAKiI,MAAMlC,KAAK1F,OAM7CL,EAAKoI,SAAS,CAACxG,cAAe8G,GAAc,WACxC1I,EAAKC,MAAMkD,QAAQC,KAAK,UA9GjBpD,EAmHnBY,eAAiB,SAACoB,GACd,IAAIM,EAAetC,EAAKiI,MAAM3F,aAI9B,IAHgBA,EAAaqG,KAAK,SAACC,GAC/B,OAAOA,EAAMzG,KAAOH,EAAKG,KAEb,CACZ,IAAI0G,EAAkBvG,EACtBuG,EAAgBzF,KAAKpB,GACrB8G,aAAaC,QAAQ,eAAgBtD,KAAKC,UAAUmD,IACpD7I,EAAKoI,SAAS,CAAC9F,aAAcuG,MA5HlB7I,EAgInBoH,yBAhImB,eAAA4B,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAf,EAAA5F,EAAAkI,KAgIQ,SAAAxC,EAAMW,GAAN,IAAAnC,EAAAY,EAAAqD,EAAA7G,EAAA8G,EAAA9I,EAAA,OAAAsG,EAAA5F,EAAA6F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACvBhH,EAAKoI,SAAS,CAACiB,eAAgBhC,EAAQtF,IAAI,SAACuH,GAAD,OAAYC,SAASD,OAChER,aAAaC,QAAQ,iBAAkBtD,KAAKC,UAAU2B,IAClDnC,EAAMlF,EAAKwJ,0BAA0BnC,GAHlBP,EAAAE,KAAA,EAIF1B,MAAMJ,GAJJ,cAInBY,EAJmBgB,EAAAI,KAAAJ,EAAAE,KAAA,EAKGlB,EAASC,OALZ,OAOvB,IAFIoD,EALmBrC,EAAAI,KAMnB5E,EAAetC,EAAKiI,MAAM3F,aANP8G,EAAA,SAOd9I,GACWgC,EAAaqG,KAAK,SAAC3G,GAC/B,OAAOA,EAAKG,KAAOgH,EAAc7I,GAAG6B,MAGpCG,EAAac,KAAK,CAACjB,GAAIgH,EAAc7I,GAAG6B,GACtBb,IAAK6H,EAAc7I,GAAGmI,UACtBjH,KAAM2H,EAAc7I,GAAGkB,KACvBrB,YAAagJ,EAAc7I,GAAGH,eAR/CG,EAAI,EAAGA,EAAI6I,EAAc9I,OAAQC,IAAK8I,EAAtC9I,GAWTwI,aAAaC,QAAQ,eAAgBtD,KAAKC,UAAUpD,IACpDtC,EAAKoI,SAAS,CAAC9F,aAAcA,IAnBN,yBAAAwE,EAAAU,SAAAd,MAhIR,gBAAA+C,GAAA,OAAAT,EAAAU,MAAArI,KAAA8D,YAAA,GAAAnF,EAsJnBwJ,0BAA4B,SAACnC,GAEzB,IADA,IAAInC,EAAM,wCACD5E,EAAI,EAAGA,EAAI+G,EAAQhH,OAAQC,IAC5BA,EAAI+G,EAAQhH,OAAS,EACrB6E,GAAG,GAAAvE,OAAO0G,EAAQ/G,GAAf,KAGH4E,GAAG,GAAAvE,OAAO0G,EAAQ/G,IAG1B,OAAO4E,GAhKQlF,EAmKnBkD,iBAAmB,SAACyG,EAAOhG,QACLyB,IAAdzB,GACA3D,EAAKoI,SAAS,CAACzE,UAAWA,EACXJ,UAAU,IAE7BvD,EAAKoI,SAAS,CAACrC,KAAM,KACNmC,UAAW,EACXF,WAAY,KACZG,KAAM,EACNrG,SAAU,GACVF,eAAe,EACfyG,gBAAgB,GAAO,WACL,KAAVsB,GACC3J,EAAKwC,mBAAmB,QAE7BxC,EAAKC,MAAMkD,QAAQC,KAAnB,IAAAzC,OAA4BgJ,OAlLhC3J,EAsLnBgD,SAAW,SAAC2G,GACR3J,EAAKC,MAAMkD,QAAQC,KAAnB,IAAAzC,OAA4BgJ,KAvLb3J,EA2LnBa,oBAAsB,SAACmB,GACnB,IAAIM,EAAetC,EAAKiI,MAAM3F,aAC1BsH,EAAYtH,EAAauH,UAAU,SAACjB,GACpC,OAAOA,EAAMzG,KAAOH,EAAKG,KAEzB0G,EAAkBvG,EACtBuG,EAAgBiB,OAAOF,EAAW,GAClCd,aAAaC,QAAQ,eAAgBtD,KAAKC,UAAUmD,IACpD7I,EAAKoI,SAAS,CAAC9F,aAAcuG,KAnMd7I,EAsMnB8D,QAtMmB6D,OAAAsB,EAAA,EAAAtB,CAAAf,EAAA5F,EAAAkI,KAsMT,SAAAa,IAAA,OAAAnD,EAAA5F,EAAA6F,KAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,cAAAgD,EAAAhD,KAAA,EACU1B,MAAM,kCAAmC,CACrDC,OAAQ,SACR0B,YAAa,UACbtB,QAAS,CACLC,eAAgB,oBAEpBJ,KAAMC,KAAKC,UAAU,CAACpD,aAActC,EAAKiI,MAAM3F,aAAaP,IAAI,SAACC,GAAD,OAAUA,EAAKG,KACzDkH,eAAgBrJ,EAAKiI,MAAMoB,mBAR/C,UAUa,MAVbW,EAAA9C,KAUEC,OAVF,CAAA6C,EAAAhD,KAAA,gBAAAgD,EAAAhD,KAAA,EAWU1B,MAAM,kCAAmC,CACjDC,OAAQ,MACR0B,YAAa,UACbtB,QAAS,CACLC,eAAgB,oBAEpBJ,KAAMC,KAAKC,UAAU,CAACpD,aAActC,EAAKiI,MAAM3F,aAAaP,IAAI,SAACC,GAAD,OAAUA,EAAKG,KACzDkH,eAAgBrJ,EAAKiI,MAAMoB,mBAlBnD,UAoBiB,MApBjBW,EAAA9C,KAoBMC,OApBN,CAAA6C,EAAAhD,KAAA,gBAAAgD,EAAAhD,KAAA,GAqBkB1B,MAAM,gCAAiC,CACnDC,OAAQ,OACR0B,YAAa,YAvBnB,QAwBqB,MAxBrB+C,EAAA9C,KAwBUC,SACJ2B,aAAaC,QAAQ,eAAgBtD,KAAKC,UAAU,KACpDoD,aAAaC,QAAQ,iBAAkBtD,KAAKC,UAAU,KACtD1F,EAAKoI,SAAS,CAAC9F,aAAc,GACd2H,mBAAoB,GACpB1G,UAAU,EACVI,UAAW,IAAK,kBAAM3D,EAAKkD,iBAAiB,OA9BjE,yBAAA8G,EAAAxC,SAAAuC,MApMN,IAAIzH,EAAemD,KAAKyE,MAAMpB,aAAaqB,QAAQ,iBAC/Cd,EAAiB5D,KAAKyE,MAAMpB,aAAaqB,QAAQ,mBAHtC,OAIM,OAAjB7H,IACAA,EAAe,GACfwG,aAAaC,QAAQ,eAAgBtD,KAAKC,UAAUpD,KAEjC,OAAnB+G,IACAA,EAAiB,GACjBP,aAAaC,QAAQ,iBAAkBtD,KAAKC,UAAU2D,KAE1DrJ,EAAKiI,MAAQ,CACT3F,aAAcA,EACd+G,eAAgBA,EAChBtD,KAAM,KACNmC,UAAW,EACXF,WAAY,KACZG,KAAM,EACNrG,SAAU,GACVF,eAAe,EACfyG,gBAAgB,EAChB9E,UAAU,EACVI,UAAW,IAvBA3D,yMA2O8B,MAAzCqB,KAAKpB,MAAMkD,QAAQzD,SAAS0K,UACxB/I,KAAK4G,MAAMI,gBACXhH,KAAKmB,mBAAmB,0BAIZ8C,MAAM,iCAClB,CAAC2B,YAAa,0BADdoD,kBAEaA,EAAItE,eAAjBA,UACKxC,UACLlC,KAAK+G,SAAS,CACVzE,UAAWoC,EAAKpC,UAChBJ,UAAU,sDAIlB6C,QAAQD,MAAMmE,EAAAhD,GAAMjB,oJAInB,IAAAkE,EAAAlJ,KACL,OACIN,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CAAQrH,QAAS9B,KAAKpB,MAAMkD,SACxBpC,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CACIC,KAAK,IACL1F,OAAQ,SAAC9E,GAAD,OAAWc,EAAAC,EAAAC,cAACyJ,EAAD/C,OAAAgD,OAAA,GAAY1K,EAAZ,CAAmBuC,mBAAoB+H,EAAK/H,mBAAoB2B,YAAaoG,EAAKtC,MAAM3F,aAAajC,OAAQ6C,iBAAkBqH,EAAKrH,iBAAkBF,SAAUuH,EAAKvH,SAAUO,SAAUgH,EAAKtC,MAAM1E,SAAUI,UAAW4G,EAAKtC,MAAMtE,UAAWG,QAASyG,EAAKzG,cAEpR/C,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,KACIzJ,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CACII,OAAK,EAACH,KAAK,SACX1F,OAAQ,SAAC9E,GAAD,OAAWc,EAAAC,EAAAC,cAAC4J,EAADlD,OAAAgD,OAAA,GAAW1K,EAAX,CAAkBmH,yBAA0BmD,EAAKnD,yBAA0BlE,iBAAkBqH,EAAKrH,uBAEzHnC,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CACII,OAAK,EAACH,KAAK,UACX1F,OAAQ,SAAC9E,GAAD,OAAWc,EAAAC,EAAAC,cAAC6J,EAAW7K,MAEnCc,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CACII,OAAK,EAACH,KAAK,IACX1F,OAAQ,SAAC9E,GAAD,OACAc,EAAAC,EAAAC,cAAC8J,EAAD,CAASzI,aAAciI,EAAKtC,MAAM3F,aAAc1B,eAAgB2J,EAAK3J,eAAgBkB,SAAUyI,EAAKtC,MAAMnG,SAAUF,cAAe2I,EAAKtC,MAAMrG,cAAeC,aAAc0I,EAAK1I,kBAE5Ld,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CACIC,KAAK,aACL1F,OAAQ,SAAC9E,GAAD,OACAc,EAAAC,EAAAC,cAAC+J,EAAD,CAAW1I,aAAciI,EAAKtC,MAAM3F,aAAczB,oBAAqB0J,EAAK1J,kCAxR1FY,IAAMC,oBCRTuJ,gBCOfnG,IAASC,OAAOhE,EAAAC,EAAAC,cAACiK,EAAD,CAAK/H,QAASA,IAAiBT,SAASuC,eAAe,STyHjE,kBAAmBkG,WACrBA,UAAUC,cAAcC,MAAMxF,KAAK,SAAAyF,GACjCA,EAAaC","file":"static/js/main.b684db72.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Brewdog-logo.fb243bee.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './css/Beer.css';\n\nclass Beer extends React.Component {\n  trimDescription = () => {\n    let descriptionArr = this.props.attributes.description.split(' ');\n    let wordLimit = 40;\n    if (descriptionArr.length <= wordLimit) {\n      return this.props.attributes.description;\n    }\n    let description = '';\n    for (let i = 0; i < wordLimit; i++) {\n      let word = descriptionArr[i];\n      if (i === wordLimit - 1) {\n        if (word.charAt(word.length - 1) === '.') {\n          word = word.slice(0, word.length - 1);\n        }\n        description += `${word}...`;\n      }\n      else {\n        description += `${word} `;\n      }\n    }\n    return description;\n  }\n\n  addToFavorites = () => {\n    this.props.addToFavorites(this.props.attributes);\n  }\n\n  removeFromFavorites = () => {\n    this.props.removeFromFavorites(this.props.attributes);\n  }\n\n  addButton = () => {\n    if (this.props.addToFavorites) {\n      return (<div className=\"favorite-container\">\n      <button className=\"btn btn-outline-primary\" onClick={this.addToFavorites}>Add to Favorites</button>\n      </div>);\n    }\n    else if (this.props.removeFromFavorites) {\n      return (<div className=\"favorite-container\">\n      <button className=\"btn btn-outline-primary\" onClick={this.removeFromFavorites}>Remove from Favorites</button>\n      </div>);\n    }\n  }\n\n  render() {\n    return (<div className=\"beer-card border border-light rounded shadow m-2\">\n              <div className=\"img-and-description-container\">\n                <div className=\"beer-img-container\">\n                    <img className=\"beer-img\" src={this.props.attributes.img} alt=\"Beer\"></img>\n                </div>\n                <div className=\"description-container\">\n                  <h5 className=\"beer-name\">{this.props.attributes.name}</h5>\n                  <div className=\"beer-description\">{this.trimDescription()}</div>\n                </div>\n              </div>\n              {this.addButton()}\n            </div>);\n  }\n}\n\nexport default Beer;\n","import React from 'react';\nimport './css/Results.css';\nimport Beer from './Beer';\n\nclass Results extends React.Component {\n  displayButton = () => {\n    if (this.props.displayButton === true) {\n      return(<button className=\"btn btn-primary w-50\" onClick={this.props.displayBeers}>Load More</button>);\n    }\n  }\n  \n  displayBeers = () => {\n    if (this.props.beerList !== null) {\n      return(this.props.beerList.map(beer => <Beer key={beer.id} beerKey={beer.id} attributes={beer} addToFavorites={this.props.addToFavorites}></Beer>));\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"beers\">\n          {this.displayBeers()}\n        </div>\n        <div className=\"w-100 m-2 d-flex justify-content-center align-items-center\" id=\"load-more-container\">                    {this.displayButton()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Results;\n","import React from 'react';\nimport './css/Favorites.css';\nimport Beer from './Beer';\n\nclass Favorites extends React.Component {\n    render() {\n        return (\n            <div className=\"d-flex justify-content-center align-items-center flex-wrap\">\n                {this.props.favoriteList.map(beer => <Beer key={beer.id} beerKey={beer.id} attributes={beer} removeFromFavorites={this.props.removeFromFavorites}></Beer>)}\n            </div>\n        );\n    }\n}\n\n\nexport default Favorites;","import React from 'react';\nimport './css/Navbar.css';\nimport { Dropdown } from 'react-bootstrap';\nimport logo from '../images/Brewdog-logo.png';\n\nclass Navbar extends React.Component {\n  getAndDisplayBeers = () => {\n    let searchValue = document.forms['search-form']['search'].value;\n    document.forms['search-form']['search'].value = null;\n    this.props.getAndDisplayBeers(searchValue);\n  }\n\n  submit = (e) => {\n    e.preventDefault();\n    this.getAndDisplayBeers();\n  }\n\n  redirect = (e) => {\n    if (e.target.id === 'logo') {\n      this.props.resetAndRedirect('');\n    } else if (e.target.id === 'favorites-btn') {\n      this.props.history.push('favorites');\n    } else if (e.target.innerHTML === 'Sign in') {\n      this.props.history.push('login')\n    } else if (e.target.innerHTML === 'Sign up') {\n      this.props.history.push('signup');\n    } \n  }\n\n  constructDropdown = () => {\n    if (!this.props.loggedIn) {\n      return (<Dropdown className=\"mr-2\">\n                <Dropdown.Toggle variant=\"outline-primary\" id=\"dropdown-basic\">\n                  Sign in\n                </Dropdown.Toggle>\n    \n                <Dropdown.Menu>\n                  <Dropdown.Item onClick={this.redirect}>Sign in</Dropdown.Item>\n                  <Dropdown.Item onClick={this.redirect}>Sign up</Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>);\n    }\n    else {\n      return (<Dropdown className=\"mr-2\">\n                <Dropdown.Toggle variant=\"outline-primary\" id=\"dropdown-basic\">\n                  Hello {`${this.props.firstname}`}\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                  <Dropdown.Item onClick={this.props.signOut}>Sign out</Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>);\n    }\n  }\n\n  render() {\n    return (\n      <nav id=\"navbar\" className=\"navbar navbar-light bg-light rounded shadow-sm fixed-top\">\n        <div id=\"logo-container\" onClick={this.redirect}>\n          <img id=\"logo\" src={logo}></img>\n        </div>\n        <form className=\"d-flex flex-grow-1 ml-2 mr-2\" name=\"search-form\" id=\"search-form\" onSubmit={this.submit}>\n            <input id=\"search\" type=\"text\" className=\"form-control rounded-left border-right-0 flex-grow-1\" placeholder=\"Search for beer...\" name=\"search\"></input>\n            <button className=\"btn btn-primary rounded-right\" type=\"submit\" id=\"search-btn\">Search</button>\n        </form>\n        {this.constructDropdown()}\n        <button type=\"button\" className=\"btn btn-primary\" onClick={this.redirect} id=\"favorites-btn\">\n            <span className=\"text-nowrap\">Favorites <span id=\"badge\" className=\"badge badge-light\">{this.props.favoriteNum}</span></span>\n        </button>\n      </nav>\n    ); \n  }\n}\n\nexport default Navbar;\n","import React from 'react';\nimport './css/Signup.css';\nimport ReactDOM from 'react-dom';\n\nclass Signup extends React.Component {\n    redirect = (e) => {\n    }\n\n    formHandler = (e) => {\n        e.preventDefault();\n        let signupForm = document.forms['signup-form'];\n        if (signupForm['password1'].value !== signupForm['password2'].value) {\n            this.displayWarningText('Passwords do not match.')\n        }\n        let userInfo = {firstname: signupForm['firstname'].value,\n                        lastname: signupForm['lastname'].value,\n                        email: signupForm['email'].value,\n                        password: signupForm['password1'].value};\n        this.signUp('http://localhost:5000/signup', userInfo)\n    }\n\n    displayWarningText = (warningText) => {\n        ReactDOM.render(<div className=\"d-flex justify-content-center align-items-center alert alert-warning w-100 h-100\" role=\"alert\">\n        {warningText}</div>, document.getElementById('sign-up-warning'));\n    }\n    \n    signUp = (url = '', data = {}) => {\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then((response) => response.json())\n        .then((json) => {\n            if (json.statusCode === 1) {\n                this.props.history.push('/login');\n            }\n            else {\n                this.displayWarningText(json.message);\n                return;\n            }\n        })\n        .catch((error) => {\n            console.error(error.stack);\n            return;\n        });\n    };\n\n    render() {\n        return (\n            <div id=\"sign-up-container\" className=\"w-100 d-flex flex-column align-items-center\">\n                <div id=\"sign-up-warning\"></div>\n                <form className=\"d-flex justify-content-center align-items-center flex-column border border-light rounded shadow\" id=\"sign-up-form\" onSubmit={this.formHandler} name=\"signup-form\">\n                    <div className=\"form-group mb-2 d-flex justify-content-center align-items-center sign-up\">\n                        <input type=\"text\" className=\"form-control mr-3\" placeholder=\"First name\" name=\"firstname\" required></input>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" name=\"lastname\" required></input>\n                    </div>\n                    <div className=\"form-group mb-2 sign-up\">\n                        <input type=\"email\" className=\"form-control\" placeholder=\"Email\" name=\"email\" required></input>\n                    </div>\n                    <div className=\"form-group sign-up\">\n                        <input type=\"password\" className=\"form-control mb-2\" placeholder=\"Password\" name=\"password1\" required></input>\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Confirm password\" name=\"password2\" required></input>\n                    </div>\n                    <button type=\"submit\" id=\"sign-up-btn\" className=\"btn btn-outline-primary align-self-center\">Sign up</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Signup;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/Login.css'\n\nclass Login extends React.Component {\n    formHandler = (e) => {\n        e.preventDefault();\n        let loginForm = document.forms['login-form'];\n        let userInfo = {email: loginForm['email'].value,\n                        password: loginForm['password'].value};\n        this.login('http://localhost:5000/login', userInfo)\n\n    }\n\n    displayWarningText = (warningText) => {\n        ReactDOM.render(<div className=\"d-flex justify-content-center align-items-center alert alert-warning w-100 h-100\" role=\"alert\">\n        {warningText}</div>, document.getElementById('login-warning'));\n    }\n\n    login = async(url = '', data = {}) => {\n        try {\n            let response = await fetch(url, {\n                method: 'POST',\n                credentials: 'include',\n                body: JSON.stringify(data),\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n            if (response.status === 401) {\n                this.displayWarningText('The email or password is incorrect.')\n            }\n            else {\n                let json = await response.json();\n                if (json.statusCode === 1) {\n                    this.props.updateFavoritesFromLogin(json.beerIDs);\n                    this.props.resetAndRedirect('', json.firstname);\n                } \n            }\n        } catch(error) {\n            console.error(error.stack);\n            return;\n        };\n    };\n    \n    render() {\n        return (\n            <div id=\"login-container\" className=\"w-100 d-flex flex-column align-items-center\">\n                <div id=\"login-warning\"></div>\n                <form id=\"login-form\" className=\"d-flex flex-column justify-content-center align-items-center border border-light rounded shadow\" onSubmit={this.formHandler} name=\"login-form\">\n                    <input type=\"email\" className=\"form-control mb-2 login\" placeholder=\"Email\" name=\"email\" id=\"email\" required></input>\n                    <input type=\"password\" className=\"form-control mb-3 login\" placeholder=\"Password\" name=\"password\" id=\"password\" required></input>\n                    <button type=\"submit\" className=\"btn btn-outline-primary align-self-center login mb-3\" id=\"sign-in\">Sign in</button>\n                    <div id=\"sign-up-alert\" className=\"alert alert-primary login d-flex justify-content-center align-items-center\" role=\"alert\">\n                        <div>New user? Sign up <a href=\"/signup\" className=\"alert-link\">here</a>.</div>\n                    </div>\n                    </form>\n            </div>\n        );\n    }\n}\n\n/*className=\"login warning mt-3 mb-3*/\n\n\n\nexport default Login;","import React from 'react';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport Results from './Results';\nimport Favorites from './Favorites';\nimport Navbar from './Navbar';\nimport Signup from './Signup';\nimport Login from './Login';\nimport './css/App.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        let favoriteList = JSON.parse(localStorage.getItem('favoriteList'));\n        let favoriteListDB = JSON.parse(localStorage.getItem('favoriteListDB'));\n        if (favoriteList === null) {\n            favoriteList = [];\n            localStorage.setItem('favoriteList', JSON.stringify(favoriteList));\n        }\n        if (favoriteListDB === null) {\n            favoriteListDB = [];\n            localStorage.setItem('favoriteListDB', JSON.stringify(favoriteListDB));\n        }\n        this.state = {\n            favoriteList: favoriteList,\n            favoriteListDB: favoriteListDB,\n            json: null, \n            jsonIndex: 0,\n            searchTerm: null,\n            page: 1,\n            beerList: [],\n            displayButton: false,\n            haventSearched: true,\n            loggedIn: false,\n            firstname: ''\n        }\n    }\n\n    getAndDisplayBeers = (searchTerm) => {\n        if (searchTerm === '') {\n            return;\n        }\n        if (searchTerm === this.state.searchTerm) {\n            if (this.state.jsonIndex < this.state.json.length || this.state.json.length < 80) {\n                return;\n            }\n        }\n        fetch(`https://api.punkapi.com/v2/beers?page=${this.state.page}&per_page=80&beer_name=${searchTerm}`)\n        .then((response) => {\n          return response.json();\n        })\n        .then((json) => {\n          if (json.length === 0) {\n             return;\n          }\n          else if (searchTerm === this.state.searchTerm) {\n            this.setState({json: json,\n                           jsonIndex: 0}, () => {\n                              this.displayBeers();\n                            });\n          }\n          else {\n            this.setState({json: json,\n                           jsonIndex: 0,\n                           searchTerm: searchTerm,\n                           page: 1,\n                           beerList: null,\n                           haventSearched: false}, () => {\n                              this.displayBeers();\n                          });\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        })\n    }\n\n    displayBeers = () => {\n        let numBeers = this.state.json.length - this.state.jsonIndex;\n        if (numBeers >= 6) {\n            this.makeBeerListThenDisplay(6);\n        }\n        else if (numBeers !== 0) {\n            this.makeBeerListThenDisplay(numBeers);\n        }\n        else if (this.state.json.length === 80) {\n            this.setState({page: this.props.app.state.page + 1}, () => {\n            this.getAndDisplayBeers(this.state.searchTerm);\n            });\n        }\n        else {\n            this.setState({page: this.props.app.state.page + 1}, () => {\n            return;\n            });\n        }\n    }\n\n    makeBeerListThenDisplay = (numBeers) => {\n        let beerList = [];\n        if (this.state.beerList != null) { \n          for (let i = 0; i < this.state.beerList.length; i++) {\n              beerList.push(this.state.beerList[i]);\n          }\n        }\n        let jsonIndex = this.state.jsonIndex;\n        for (let i = 0; i < numBeers; i++) {\n            beerList.push({id: this.state.json[jsonIndex].id,\n                           img: this.state.json[jsonIndex].image_url,\n                           name: this.state.json[jsonIndex].name,\n                           description: this.state.json[jsonIndex].description});\n            jsonIndex++;               \n        }\n        this.setState({beerList: beerList, jsonIndex: jsonIndex}, () => {\n            let trueOrFalse;\n            if (this.state.jsonIndex !== this.state.json.length) {\n                trueOrFalse = true;\n            }\n            else {\n                trueOrFalse = false;\n            }\n            this.setState({displayButton: trueOrFalse}, () => {\n                this.props.history.push('/');\n            });\n        });\n    }\n\n    addToFavorites = (beer) => {\n        let favoriteList = this.state.favoriteList;\n        let beerFound = favoriteList.find((beer1) => {\n            return beer1.id === beer.id;\n        });\n        if (!beerFound) {\n            let newFavoriteList = favoriteList;\n            newFavoriteList.push(beer);\n            localStorage.setItem('favoriteList', JSON.stringify(newFavoriteList));\n            this.setState({favoriteList: newFavoriteList});\n        }\n    }\n\n    updateFavoritesFromLogin = async(beerIDs) => {\n        this.setState({favoriteListDB: beerIDs.map((beerID) => parseInt(beerID))});\n        localStorage.setItem('favoriteListDB', JSON.stringify(beerIDs));\n        let url = this.createURLForStoredBeerIDs(beerIDs);\n        let response = await fetch(url);\n        let fullInfoBeers = await response.json();\n        let favoriteList = this.state.favoriteList;\n        for (let i = 0; i < fullInfoBeers.length; i++) {\n            let beerFound = favoriteList.find((beer) => {\n                return beer.id === fullInfoBeers[i].id;\n            });\n            if (!beerFound) {\n                favoriteList.push({id: fullInfoBeers[i].id,\n                                  img: fullInfoBeers[i].image_url,\n                                  name: fullInfoBeers[i].name,\n                                  description: fullInfoBeers[i].description});\n            }\n        }\n        localStorage.setItem('favoriteList', JSON.stringify(favoriteList));\n        this.setState({favoriteList: favoriteList});\n    }\n\n    createURLForStoredBeerIDs = (beerIDs) => {\n        let url = 'https://api.punkapi.com/v2/beers?ids=';\n        for (let i = 0; i < beerIDs.length; i++) {\n            if (i < beerIDs.length - 1) {\n                url += `${beerIDs[i]}|`;\n            }\n            else {\n                url += `${beerIDs[i]}`;\n            }\n        }\n        return url;\n    }\n\n    resetAndRedirect = (route, firstname) => {\n        if (firstname !== undefined) {\n            this.setState({firstname: firstname,\n                           loggedIn: true})\n        }\n        this.setState({json: null, \n                       jsonIndex: 0,\n                       searchTerm: null,\n                       page: 1,\n                       beerList: [],\n                       displayButton: false,\n                       haventSearched: true}, () => {\n                           if (route === '') {\n                                this.getAndDisplayBeers('beer');\n                            }\n                           this.props.history.push(`/${route}`);\n                       });\n    }\n\n    redirect = (route) => {\n        this.props.history.push(`/${route}`);\n    }\n    \n\n    removeFromFavorites = (beer) => {\n        let favoriteList = this.state.favoriteList;\n        let beerIndex = favoriteList.findIndex((beer1) => {\n            return beer1.id === beer.id;\n        });\n        let newFavoriteList = favoriteList;\n        newFavoriteList.splice(beerIndex, 1);\n        localStorage.setItem('favoriteList', JSON.stringify(newFavoriteList));\n        this.setState({favoriteList: newFavoriteList});\n    }\n\n    signOut = async() => {\n        let res = await fetch('http://localhost:5000/favorites', {\n            method: 'DELETE', \n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({favoriteList: this.state.favoriteList.map((beer) => beer.id),\n                                  favoriteListDB: this.state.favoriteListDB})\n        });\n        if (res.status === 200) {\n            res = await fetch('http://localhost:5000/favorites', {\n                method: 'PUT', \n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({favoriteList: this.state.favoriteList.map((beer) => beer.id),\n                                      favoriteListDB: this.state.favoriteListDB})\n            });\n            if (res.status === 200) {\n                let res = await fetch('http://localhost:5000/signout', {\n                    method: 'POST',\n                    credentials: 'include'});\n                if (res.status === 200) {\n                    localStorage.setItem('favoriteList', JSON.stringify([]));\n                    localStorage.setItem('favoriteListDB', JSON.stringify([]));\n                    this.setState({favoriteList: [],\n                                   favoriteListFromDB: [],\n                                   loggedIn: false,\n                                   firstname: ''}, () => this.resetAndRedirect(''));\n                }\n            }\n        }\n    }\n\n    async componentDidMount() {\n        if (this.props.history.location.pathname === '/') {\n            if (this.state.haventSearched) {\n                this.getAndDisplayBeers('beer');\n            }\n        }\n        try {\n            let res = await fetch('http://localhost:5000/loggedin', \n                {credentials: 'include'});\n            let json = await res.json();\n            if (json.loggedIn) {\n                this.setState({\n                    firstname: json.firstname,\n                    loggedIn: true\n                })\n            }\n        } catch(error) {\n            console.error(error.stack);\n        }\n    }\n\n    render() {\n        return (\n            <Router history={this.props.history}>\n                <Route\n                    path=\"/\"\n                    render={(props) => <Navbar {...props} getAndDisplayBeers={this.getAndDisplayBeers} favoriteNum={this.state.favoriteList.length} resetAndRedirect={this.resetAndRedirect} redirect={this.redirect} loggedIn={this.state.loggedIn} firstname={this.state.firstname} signOut={this.signOut}></Navbar>}>\n               </Route>\n                <Switch>\n                    <Route \n                        exact path=\"/login\" \n                        render={(props) => <Login {...props} updateFavoritesFromLogin={this.updateFavoritesFromLogin} resetAndRedirect={this.resetAndRedirect}></Login>}>\n                    </Route>\n                    <Route \n                        exact path=\"/signup\" \n                        render={(props) => <Signup {...props}></Signup>}>\n                    </Route>\n                    <Route \n                        exact path=\"/\" \n                        render={(props) => \n                                <Results favoriteList={this.state.favoriteList} addToFavorites={this.addToFavorites} beerList={this.state.beerList} displayButton={this.state.displayButton} displayBeers={this.displayBeers}></Results>}>\n                    </Route>\n                    <Route \n                        path=\"/favorites\" \n                        render={(props) =>\n                                <Favorites favoriteList={this.state.favoriteList} removeFromFavorites={this.removeFromFavorites}></Favorites>}>\n                    </Route>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport history from './history';\n\nReactDOM.render(<App history={history}></App>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}