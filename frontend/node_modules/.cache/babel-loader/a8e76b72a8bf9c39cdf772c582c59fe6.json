{"ast":null,"code":"var _jsxFileName = \"/Users/jorencarlson/Desktop/Programming/Big Projects/punk_beer/frontend/src/components/App.jsx\";\nimport React from 'react';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport Results from './Results';\nimport Favorites from './Favorites';\nimport Navbar from './Navbar';\nimport Signup from './Signup';\nimport Login from './Login';\nimport './css/App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAndDisplayBeers = searchTerm => {\n      if (searchTerm === '') {\n        return;\n      }\n      /*if (searchTerm === this.state.searchTerm) {\n          if (this.state.jsonIndex < this.state.json.length || this.state.json.length < 80) {\n              return;\n          }\n      }*/\n\n\n      fetch(\"https://api.punkapi.com/v2/beers?page=\".concat(this.state.page, \"&per_page=80&beer_name=\").concat(searchTerm)).then(response => {\n        return response.json();\n      }).then(json => {\n        if (json.length === 0) {\n          return;\n        } else if (searchTerm === this.state.searchTerm) {\n          if (this.state.beerList !== null) {\n            this.setState({\n              json: json,\n              jsonIndex: 0,\n              beerList: []\n            }, () => {\n              this.displayBeers();\n            });\n          } else {\n            this.setState({\n              json: json,\n              jsonIndex: 0\n            }, () => {\n              this.displayBeers();\n            });\n          }\n        } else {\n          this.setState({\n            json: json,\n            jsonIndex: 0,\n            searchTerm: searchTerm,\n            page: 1,\n            beerList: null,\n            haventSearched: false\n          }, () => {\n            this.displayBeers();\n          });\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.displayBeers = () => {\n      let numBeers = this.state.json.length - this.state.jsonIndex;\n\n      if (numBeers >= 6) {\n        this.makeBeerListThenDisplay(6);\n      } else if (numBeers !== 0) {\n        this.makeBeerListThenDisplay(numBeers);\n      } else if (this.state.json.length === 80) {\n        this.setState({\n          page: this.props.app.state.page + 1\n        }, () => {\n          this.getAndDisplayBeers(this.state.searchTerm);\n        });\n      } else {\n        this.setState({\n          page: this.props.app.state.page + 1\n        }, () => {\n          return;\n        });\n      }\n    };\n\n    this.makeBeerListThenDisplay = numBeers => {\n      let beerList = [];\n\n      if (this.state.beerList != null) {\n        for (let i = 0; i < this.state.beerList.length; i++) {\n          beerList.push(this.state.beerList[i]);\n        }\n      }\n\n      let jsonIndex = this.state.jsonIndex;\n\n      for (let i = 0; i < numBeers; i++) {\n        beerList.push({\n          id: this.state.json[jsonIndex].id,\n          img: this.state.json[jsonIndex].image_url,\n          name: this.state.json[jsonIndex].name,\n          description: this.state.json[jsonIndex].description\n        });\n        jsonIndex++;\n      }\n\n      this.setState({\n        beerList: beerList,\n        jsonIndex: jsonIndex\n      }, () => {\n        let trueOrFalse;\n\n        if (this.state.jsonIndex !== this.state.json.length) {\n          trueOrFalse = true;\n        } else {\n          trueOrFalse = false;\n        }\n\n        this.setState({\n          displayButton: trueOrFalse\n        }, () => {\n          this.props.history.push('/');\n        });\n      });\n    };\n\n    this.addToFavorites = beer => {\n      let favoriteList = this.state.favoriteList;\n      let beerFound = favoriteList.find(beer1 => {\n        return beer1.id === beer.id;\n      });\n\n      if (!beerFound) {\n        let newFavoriteList = favoriteList;\n        newFavoriteList.push(beer);\n        localStorage.setItem('favoriteList', JSON.stringify(newFavoriteList));\n        this.setState({\n          favoriteList: newFavoriteList\n        });\n      }\n    };\n\n    this.updateFavoritesFromLogin = async beerIDs => {\n      this.setState({\n        favoriteListDB: beerIDs.map(beerID => parseInt(beerID))\n      });\n      localStorage.setItem('favoriteListDB', JSON.stringify(beerIDs));\n      let url = this.createURLForStoredBeerIDs(beerIDs);\n      let response = await fetch(url);\n      let fullInfoBeers = await response.json();\n      let favoriteList = this.state.favoriteList;\n\n      for (let i = 0; i < fullInfoBeers.length; i++) {\n        let beerFound = favoriteList.find(beer => {\n          return beer.id === fullInfoBeers[i].id;\n        });\n\n        if (!beerFound) {\n          favoriteList.push({\n            id: fullInfoBeers[i].id,\n            img: fullInfoBeers[i].image_url,\n            name: fullInfoBeers[i].name,\n            description: fullInfoBeers[i].description\n          });\n        }\n      }\n\n      localStorage.setItem('favoriteList', JSON.stringify(favoriteList));\n      this.setState({\n        favoriteList: favoriteList\n      });\n    };\n\n    this.createURLForStoredBeerIDs = beerIDs => {\n      let url = 'https://api.punkapi.com/v2/beers?ids=';\n\n      for (let i = 0; i < beerIDs.length; i++) {\n        if (i < beerIDs.length - 1) {\n          url += \"\".concat(beerIDs[i], \"|\");\n        } else {\n          url += \"\".concat(beerIDs[i]);\n        }\n      }\n\n      return url;\n    };\n\n    this.resetAndRedirect = (route, firstname) => {\n      if (firstname !== undefined) {\n        this.setState({\n          firstname: firstname,\n          loggedIn: true\n        });\n      }\n\n      this.setState({\n        json: null,\n        jsonIndex: 0,\n        searchTerm: null,\n        page: 1,\n        beerList: [],\n        displayButton: false,\n        haventSearched: true\n      }, () => {\n        if (route === '') {\n          this.getAndDisplayBeers('beer');\n        }\n\n        this.props.history.push(\"/\".concat(route));\n      });\n    };\n\n    this.redirect = route => {\n      this.props.history.push(\"/\".concat(route));\n    };\n\n    this.removeFromFavorites = beer => {\n      let favoriteList = this.state.favoriteList;\n      let beerIndex = favoriteList.findIndex(beer1 => {\n        return beer1.id === beer.id;\n      });\n      let newFavoriteList = favoriteList;\n      newFavoriteList.splice(beerIndex, 1);\n      localStorage.setItem('favoriteList', JSON.stringify(newFavoriteList));\n      this.setState({\n        favoriteList: newFavoriteList\n      });\n    };\n\n    this.signOut = async () => {\n      let res = await fetch('http://localhost:5000/favorites', {\n        method: 'DELETE',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          favoriteList: this.state.favoriteList.map(beer => beer.id),\n          favoriteListDB: this.state.favoriteListDB\n        })\n      });\n\n      if (res.status === 200) {\n        res = await fetch('http://localhost:5000/favorites', {\n          method: 'PUT',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            favoriteList: this.state.favoriteList.map(beer => beer.id),\n            favoriteListDB: this.state.favoriteListDB\n          })\n        });\n\n        if (res.status === 200) {\n          let res = await fetch('http://localhost:5000/signout', {\n            method: 'POST',\n            credentials: 'include'\n          });\n\n          if (res.status === 200) {\n            localStorage.setItem('favoriteList', JSON.stringify([]));\n            localStorage.setItem('favoriteListDB', JSON.stringify([]));\n            this.setState({\n              favoriteList: [],\n              favoriteListFromDB: [],\n              loggedIn: false,\n              firstname: ''\n            }, () => this.resetAndRedirect(''));\n          }\n        }\n      }\n    };\n\n    let _favoriteList = JSON.parse(localStorage.getItem('favoriteList'));\n\n    let favoriteListDB = JSON.parse(localStorage.getItem('favoriteListDB'));\n\n    if (_favoriteList === null) {\n      _favoriteList = [];\n      localStorage.setItem('favoriteList', JSON.stringify(_favoriteList));\n    }\n\n    if (favoriteListDB === null) {\n      favoriteListDB = [];\n      localStorage.setItem('favoriteListDB', JSON.stringify(favoriteListDB));\n    }\n\n    this.state = {\n      favoriteList: _favoriteList,\n      favoriteListDB: favoriteListDB,\n      json: null,\n      jsonIndex: 0,\n      searchTerm: null,\n      page: 1,\n      beerList: [],\n      displayButton: false,\n      haventSearched: true,\n      loggedIn: false,\n      firstname: ''\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.history.location.pathname === '/') {\n      if (this.state.haventSearched) {\n        this.getAndDisplayBeers('beer');\n      }\n    }\n\n    try {\n      let res = await fetch('http://localhost:5000/loggedin', {\n        credentials: 'include'\n      });\n      let json = await res.json();\n\n      if (json.loggedIn) {\n        this.setState({\n          firstname: json.firstname,\n          loggedIn: true\n        });\n      }\n    } catch (error) {\n      console.error(error.stack);\n    }\n  }\n\n  render() {\n    return React.createElement(Router, {\n      history: this.props.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      render: props => React.createElement(Navbar, Object.assign({}, props, {\n        getAndDisplayBeers: this.getAndDisplayBeers,\n        favoriteNum: this.state.favoriteList.length,\n        resetAndRedirect: this.resetAndRedirect,\n        redirect: this.redirect,\n        loggedIn: this.state.loggedIn,\n        firstname: this.state.firstname,\n        signOut: this.signOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: props => React.createElement(Login, Object.assign({}, props, {\n        updateFavoritesFromLogin: this.updateFavoritesFromLogin,\n        resetAndRedirect: this.resetAndRedirect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: props => React.createElement(Signup, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Results, {\n        favoriteList: this.state.favoriteList,\n        addToFavorites: this.addToFavorites,\n        beerList: this.state.beerList,\n        displayButton: this.state.displayButton,\n        displayBeers: this.displayBeers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/favorites\",\n      render: props => React.createElement(Favorites, {\n        favoriteList: this.state.favoriteList,\n        removeFromFavorites: this.removeFromFavorites,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jorencarlson/Desktop/Programming/Big Projects/punk_beer/frontend/src/components/App.jsx"],"names":["React","Route","Switch","Router","Results","Favorites","Navbar","Signup","Login","App","Component","constructor","props","getAndDisplayBeers","searchTerm","fetch","state","page","then","response","json","length","beerList","setState","jsonIndex","displayBeers","haventSearched","catch","error","console","numBeers","makeBeerListThenDisplay","app","i","push","id","img","image_url","name","description","trueOrFalse","displayButton","history","addToFavorites","beer","favoriteList","beerFound","find","beer1","newFavoriteList","localStorage","setItem","JSON","stringify","updateFavoritesFromLogin","beerIDs","favoriteListDB","map","beerID","parseInt","url","createURLForStoredBeerIDs","fullInfoBeers","resetAndRedirect","route","firstname","undefined","loggedIn","redirect","removeFromFavorites","beerIndex","findIndex","splice","signOut","res","method","credentials","headers","body","status","favoriteListFromDB","parse","getItem","componentDidMount","location","pathname","stack","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport Results from './Results';\nimport Favorites from './Favorites';\nimport Navbar from './Navbar';\nimport Signup from './Signup';\nimport Login from './Login';\nimport './css/App.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        let favoriteList = JSON.parse(localStorage.getItem('favoriteList'));\n        let favoriteListDB = JSON.parse(localStorage.getItem('favoriteListDB'));\n        if (favoriteList === null) {\n            favoriteList = [];\n            localStorage.setItem('favoriteList', JSON.stringify(favoriteList));\n        }\n        if (favoriteListDB === null) {\n            favoriteListDB = [];\n            localStorage.setItem('favoriteListDB', JSON.stringify(favoriteListDB));\n        }\n        this.state = {\n            favoriteList: favoriteList,\n            favoriteListDB: favoriteListDB,\n            json: null, \n            jsonIndex: 0,\n            searchTerm: null,\n            page: 1,\n            beerList: [],\n            displayButton: false,\n            haventSearched: true,\n            loggedIn: false,\n            firstname: ''\n        }\n    }\n\n    getAndDisplayBeers = (searchTerm) => {\n        if (searchTerm === '') {\n            return;\n        }\n        /*if (searchTerm === this.state.searchTerm) {\n            if (this.state.jsonIndex < this.state.json.length || this.state.json.length < 80) {\n                return;\n            }\n        }*/\n        fetch(`https://api.punkapi.com/v2/beers?page=${this.state.page}&per_page=80&beer_name=${searchTerm}`)\n        .then((response) => {\n          return response.json();\n        })\n        .then((json) => {\n          if (json.length === 0) {\n             return;\n          }\n          else if (searchTerm === this.state.searchTerm) {\n            if (this.state.beerList !== null) {\n                this.setState({json: json,\n                               jsonIndex: 0,\n                               beerList: []}, () => {\n                       this.displayBeers();\n                     });\n            }\n            else {\n                this.setState({json: json,\n                           jsonIndex: 0}, () => {\n                              this.displayBeers();\n                            });\n            }\n          }\n          else {\n            this.setState({json: json,\n                           jsonIndex: 0,\n                           searchTerm: searchTerm,\n                           page: 1,\n                           beerList: null,\n                           haventSearched: false}, () => {\n                              this.displayBeers();\n                          });\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        })\n    }\n\n    displayBeers = () => {\n        let numBeers = this.state.json.length - this.state.jsonIndex;\n        if (numBeers >= 6) {\n            this.makeBeerListThenDisplay(6);\n        }\n        else if (numBeers !== 0) {\n            this.makeBeerListThenDisplay(numBeers);\n        }\n        else if (this.state.json.length === 80) {\n            this.setState({page: this.props.app.state.page + 1}, () => {\n            this.getAndDisplayBeers(this.state.searchTerm);\n            });\n        }\n        else {\n            this.setState({page: this.props.app.state.page + 1}, () => {\n            return;\n            });\n        }\n    }\n\n    makeBeerListThenDisplay = (numBeers) => {\n        let beerList = [];\n        if (this.state.beerList != null) { \n          for (let i = 0; i < this.state.beerList.length; i++) {\n              beerList.push(this.state.beerList[i]);\n          }\n        }\n        let jsonIndex = this.state.jsonIndex;\n        for (let i = 0; i < numBeers; i++) {\n            beerList.push({id: this.state.json[jsonIndex].id,\n                           img: this.state.json[jsonIndex].image_url,\n                           name: this.state.json[jsonIndex].name,\n                           description: this.state.json[jsonIndex].description});\n            jsonIndex++;               \n        }\n        this.setState({beerList: beerList, jsonIndex: jsonIndex}, () => {\n            let trueOrFalse;\n            if (this.state.jsonIndex !== this.state.json.length) {\n                trueOrFalse = true;\n            }\n            else {\n                trueOrFalse = false;\n            }\n            this.setState({displayButton: trueOrFalse}, () => {\n                this.props.history.push('/');\n            });\n        });\n    }\n\n    addToFavorites = (beer) => {\n        let favoriteList = this.state.favoriteList;\n        let beerFound = favoriteList.find((beer1) => {\n            return beer1.id === beer.id;\n        });\n        if (!beerFound) {\n            let newFavoriteList = favoriteList;\n            newFavoriteList.push(beer);\n            localStorage.setItem('favoriteList', JSON.stringify(newFavoriteList));\n            this.setState({favoriteList: newFavoriteList});\n        }\n    }\n\n    updateFavoritesFromLogin = async(beerIDs) => {\n        this.setState({favoriteListDB: beerIDs.map((beerID) => parseInt(beerID))});\n        localStorage.setItem('favoriteListDB', JSON.stringify(beerIDs));\n        let url = this.createURLForStoredBeerIDs(beerIDs);\n        let response = await fetch(url);\n        let fullInfoBeers = await response.json();\n        let favoriteList = this.state.favoriteList;\n        for (let i = 0; i < fullInfoBeers.length; i++) {\n            let beerFound = favoriteList.find((beer) => {\n                return beer.id === fullInfoBeers[i].id;\n            });\n            if (!beerFound) {\n                favoriteList.push({id: fullInfoBeers[i].id,\n                                  img: fullInfoBeers[i].image_url,\n                                  name: fullInfoBeers[i].name,\n                                  description: fullInfoBeers[i].description});\n            }\n        }\n        localStorage.setItem('favoriteList', JSON.stringify(favoriteList));\n        this.setState({favoriteList: favoriteList});\n    }\n\n    createURLForStoredBeerIDs = (beerIDs) => {\n        let url = 'https://api.punkapi.com/v2/beers?ids=';\n        for (let i = 0; i < beerIDs.length; i++) {\n            if (i < beerIDs.length - 1) {\n                url += `${beerIDs[i]}|`;\n            }\n            else {\n                url += `${beerIDs[i]}`;\n            }\n        }\n        return url;\n    }\n\n    resetAndRedirect = (route, firstname) => {\n        if (firstname !== undefined) {\n            this.setState({firstname: firstname,\n                           loggedIn: true})\n        }\n        this.setState({json: null, \n                       jsonIndex: 0,\n                       searchTerm: null,\n                       page: 1,\n                       beerList: [],\n                       displayButton: false,\n                       haventSearched: true}, () => {\n                           if (route === '') {\n                                this.getAndDisplayBeers('beer');\n                            }\n                           this.props.history.push(`/${route}`);\n                       });\n    }\n\n    redirect = (route) => {\n        this.props.history.push(`/${route}`);\n    }\n    \n\n    removeFromFavorites = (beer) => {\n        let favoriteList = this.state.favoriteList;\n        let beerIndex = favoriteList.findIndex((beer1) => {\n            return beer1.id === beer.id;\n        });\n        let newFavoriteList = favoriteList;\n        newFavoriteList.splice(beerIndex, 1);\n        localStorage.setItem('favoriteList', JSON.stringify(newFavoriteList));\n        this.setState({favoriteList: newFavoriteList});\n    }\n\n    signOut = async() => {\n        let res = await fetch('http://localhost:5000/favorites', {\n            method: 'DELETE', \n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({favoriteList: this.state.favoriteList.map((beer) => beer.id),\n                                  favoriteListDB: this.state.favoriteListDB})\n        });\n        if (res.status === 200) {\n            res = await fetch('http://localhost:5000/favorites', {\n                method: 'PUT', \n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({favoriteList: this.state.favoriteList.map((beer) => beer.id),\n                                      favoriteListDB: this.state.favoriteListDB})\n            });\n            if (res.status === 200) {\n                let res = await fetch('http://localhost:5000/signout', {\n                    method: 'POST',\n                    credentials: 'include'});\n                if (res.status === 200) {\n                    localStorage.setItem('favoriteList', JSON.stringify([]));\n                    localStorage.setItem('favoriteListDB', JSON.stringify([]));\n                    this.setState({favoriteList: [],\n                                   favoriteListFromDB: [],\n                                   loggedIn: false,\n                                   firstname: ''}, () => this.resetAndRedirect(''));\n                }\n            }\n        }\n    }\n\n    async componentDidMount() {\n        if (this.props.history.location.pathname === '/') {\n            if (this.state.haventSearched) {\n                this.getAndDisplayBeers('beer');\n            }\n        }\n        try {\n            let res = await fetch('http://localhost:5000/loggedin', \n                {credentials: 'include'});\n            let json = await res.json();\n            if (json.loggedIn) {\n                this.setState({\n                    firstname: json.firstname,\n                    loggedIn: true\n                })\n            }\n        } catch(error) {\n            console.error(error.stack);\n        }\n    }\n\n    render() {\n        return (\n            <Router history={this.props.history}>\n                <Route\n                    path=\"/\"\n                    render={(props) => <Navbar {...props} getAndDisplayBeers={this.getAndDisplayBeers} favoriteNum={this.state.favoriteList.length} resetAndRedirect={this.resetAndRedirect} redirect={this.redirect} loggedIn={this.state.loggedIn} firstname={this.state.firstname} signOut={this.signOut}></Navbar>}>\n               </Route>\n                <Switch>\n                    <Route \n                        exact path=\"/login\" \n                        render={(props) => <Login {...props} updateFavoritesFromLogin={this.updateFavoritesFromLogin} resetAndRedirect={this.resetAndRedirect}></Login>}>\n                    </Route>\n                    <Route \n                        exact path=\"/signup\" \n                        render={(props) => <Signup {...props}></Signup>}>\n                    </Route>\n                    <Route \n                        exact path=\"/\" \n                        render={(props) => \n                                <Results favoriteList={this.state.favoriteList} addToFavorites={this.addToFavorites} beerList={this.state.beerList} displayButton={this.state.displayButton} displayBeers={this.displayBeers}></Results>}>\n                    </Route>\n                    <Route \n                        path=\"/favorites\" \n                        render={(props) =>\n                                <Favorites favoriteList={this.state.favoriteList} removeFromFavorites={this.removeFromFavorites}></Favorites>}>\n                    </Route>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}