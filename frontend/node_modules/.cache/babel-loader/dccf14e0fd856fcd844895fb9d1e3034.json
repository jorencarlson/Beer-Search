{"ast":null,"code":"var _jsxFileName = \"/Users/jorencarlson/Desktop/Programming/Big Projects/punk_beer/frontend/src/components/App.jsx\";\nimport React from 'react';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport Results from './Results';\nimport Favorites from './Favorites';\nimport Navbar from './Navbar';\nimport Signup from './Signup';\nimport Login from './Login';\nimport './css/App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAndDisplayBeers = searchTerm => {\n      if (searchTerm === '') {\n        return;\n      }\n\n      if (searchTerm === this.state.searchTerm) {\n        if (this.state.jsonIndex < this.state.json.length || this.state.json.length < 80) {\n          return;\n        }\n      }\n\n      fetch(\"https://api.punkapi.com/v2/beers?page=\".concat(this.state.page, \"&per_page=80&beer_name=\").concat(searchTerm)).then(response => {\n        return response.json();\n      }).then(json => {\n        if (json.length === 0) {\n          return;\n        } else if (searchTerm === this.state.searchTerm) {\n          this.setState({\n            json: json,\n            jsonIndex: 0\n          }, () => {\n            this.displayBeers();\n          });\n        } else {\n          this.setState({\n            json: json,\n            jsonIndex: 0,\n            searchTerm: searchTerm,\n            page: 1,\n            beerList: null,\n            haventSearched: false\n          }, () => {\n            this.displayBeers();\n          });\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.displayBeers = () => {\n      let numBeers = this.state.json.length - this.state.jsonIndex;\n\n      if (numBeers >= 6) {\n        this.makeBeerListThenDisplay(6);\n      } else if (numBeers !== 0) {\n        this.makeBeerListThenDisplay(numBeers);\n      } else if (this.state.json.length === 80) {\n        this.setState({\n          page: this.props.app.state.page + 1\n        }, () => {\n          this.getAndDisplayBeers(this.state.searchTerm);\n        });\n      } else {\n        this.setState({\n          page: this.props.app.state.page + 1\n        }, () => {\n          return;\n        });\n      }\n    };\n\n    this.makeBeerListThenDisplay = numBeers => {\n      let beerList = [];\n\n      if (this.state.beerList != null) {\n        for (let i = 0; i < this.state.beerList.length; i++) {\n          beerList.push(this.state.beerList[i]);\n        }\n      }\n\n      let jsonIndex = this.state.jsonIndex;\n\n      for (let i = 0; i < numBeers; i++) {\n        beerList.push({\n          id: this.state.json[jsonIndex].id,\n          img: this.state.json[jsonIndex].image_url,\n          name: this.state.json[jsonIndex].name,\n          description: this.state.json[jsonIndex].description\n        });\n        jsonIndex++;\n      }\n\n      this.setState({\n        beerList: beerList,\n        jsonIndex: jsonIndex\n      }, () => {\n        let trueOrFalse;\n\n        if (this.state.jsonIndex !== this.state.json.length) {\n          trueOrFalse = true;\n        } else {\n          trueOrFalse = false;\n        }\n\n        this.setState({\n          displayButton: trueOrFalse\n        }, () => {\n          this.props.history.push('/');\n        });\n      });\n    };\n\n    this.addToFavorites = beer => {\n      let favoriteList = this.state.favoriteList;\n      console.log(favoriteList);\n      let beerFound = favoriteList.find(beer1 => {\n        return beer1.id === beer.id;\n      });\n\n      if (!beerFound) {\n        let newFavoriteList = favoriteList;\n        newFavoriteList.push(beer);\n        localStorage.setItem('favoriteList', JSON.stringify(newFavoriteList));\n        this.setState({\n          favoriteList: newFavoriteList\n        });\n      }\n    };\n\n    this.updateFavoritesFromLogin = async beerIDs => {\n      let url = this.createURLForStoredBeerIDs(beerIDs);\n      let response = await fetch(url);\n      let fullInfoBeers = await response.json();\n      let favoriteList = this.state.favoriteList;\n\n      for (let i = 0; i < fullInfoBeers.length; i++) {\n        let beerFound = favoriteList.find(beer => {\n          return beer.id === fullInfoBeers[i].id;\n        });\n\n        if (!beerFound) {\n          let newFavoriteList = favoriteList;\n          newFavoriteList.push(fullInfoBeers[i]);\n          localStorage.setItem('favoriteList', JSON.stringify(newFavoriteList));\n          this.setState({\n            favoriteList: newFavoriteList\n          });\n        }\n      }\n    };\n\n    this.createURLForStoredBeerIDs = beerIDs => {\n      let url = 'https://api.punkapi.com/v2/beers?ids=';\n\n      for (let i = 0; i < beerIDs.length; i++) {\n        if (i < beerIDs.length - 1) {\n          url += \"\".concat(beerIDs[i], \"|\");\n        } else {\n          url += \"\".concat(beerIDs[i]);\n        }\n      }\n\n      return url;\n    };\n\n    this.resetAndRedirect = (route, firstname) => {\n      if (firstname !== undefined) {\n        this.setState({\n          firstname: firstname,\n          loggedIn: true\n        });\n      }\n\n      this.setState({\n        json: null,\n        jsonIndex: 0,\n        searchTerm: null,\n        page: 1,\n        beerList: [],\n        displayButton: false,\n        haventSearched: true\n      }, () => {\n        if (route === '') {\n          console.log('here');\n          this.getAndDisplayBeers('beer');\n        }\n\n        this.props.history.push(\"/\".concat(route));\n      });\n    };\n\n    this.redirect = route => {\n      if (route === '') {\n        this.getAndDisplayBeers('beer');\n      }\n\n      this.props.history.push(\"/\".concat(route));\n    };\n\n    this.removeFromFavorites = beer => {\n      let favoriteList = this.state.favoriteList;\n      let beerIndex = favoriteList.findIndex(beer1 => {\n        return beer1.id === beer.id;\n      });\n      let newFavoriteList = favoriteList;\n      newFavoriteList.splice(beerIndex, 1);\n      localStorage.setItem('favoriteList', JSON.stringify(newFavoriteList));\n      this.setState({\n        favoriteList: newFavoriteList\n      });\n    };\n\n    this.signOut = async () => {\n      let res = await fetch('http://localhost:5000/favorites', {\n        method: 'PUT',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.favoriteList.map(beer => beer.id))\n      }); //let json = await res.json();\n    };\n\n    let _favoriteList = JSON.parse(localStorage.getItem('favoriteList'));\n\n    if (_favoriteList === null) {\n      _favoriteList = [];\n      localStorage.setItem('favoriteList', JSON.stringify(_favoriteList));\n    }\n\n    this.state = {\n      favoriteList: _favoriteList,\n      json: null,\n      jsonIndex: 0,\n      searchTerm: null,\n      page: 1,\n      beerList: [],\n      displayButton: false,\n      haventSearched: true,\n      loggedIn: false,\n      firstname: ''\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.history.location.pathname === '/') {\n      if (this.state.haventSearched) {\n        this.getAndDisplayBeers('beer');\n      }\n    }\n\n    try {\n      let res = await fetch('http://localhost:5000/loggedin', {\n        credentials: 'include'\n      });\n      let json = await res.json();\n      console.log(json);\n\n      if (json.loggedIn) {\n        this.setState({\n          firstname: json.firstname,\n          loggedIn: true\n        });\n      }\n    } catch (error) {\n      console.error(error.stack);\n    }\n  }\n\n  render() {\n    return React.createElement(Router, {\n      history: this.props.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      getAndDisplayBeers: this.getAndDisplayBeers,\n      favoriteNum: this.state.favoriteList.length,\n      resetAndRedirect: this.resetAndRedirect,\n      loggedIn: this.state.loggedIn,\n      firstname: this.state.firstname,\n      signOut: this.signOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: props => React.createElement(Login, Object.assign({}, props, {\n        updateFavoritesFromLogin: this.updateFavoritesFromLogin,\n        resetAndRedirect: this.resetAndRedirect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: props => React.createElement(Signup, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Results, {\n        favoriteList: this.state.favoriteList,\n        addToFavorites: this.addToFavorites,\n        beerList: this.state.beerList,\n        displayButton: this.state.displayButton,\n        displayBeers: this.displayBeers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/favorites\",\n      render: props => React.createElement(Favorites, {\n        favoriteList: this.state.favoriteList,\n        removeFromFavorites: this.removeFromFavorites,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jorencarlson/Desktop/Programming/Big Projects/punk_beer/frontend/src/components/App.jsx"],"names":["React","Route","Switch","Router","Results","Favorites","Navbar","Signup","Login","App","Component","constructor","props","getAndDisplayBeers","searchTerm","state","jsonIndex","json","length","fetch","page","then","response","setState","displayBeers","beerList","haventSearched","catch","error","console","numBeers","makeBeerListThenDisplay","app","i","push","id","img","image_url","name","description","trueOrFalse","displayButton","history","addToFavorites","beer","favoriteList","log","beerFound","find","beer1","newFavoriteList","localStorage","setItem","JSON","stringify","updateFavoritesFromLogin","beerIDs","url","createURLForStoredBeerIDs","fullInfoBeers","resetAndRedirect","route","firstname","undefined","loggedIn","redirect","removeFromFavorites","beerIndex","findIndex","splice","signOut","res","method","credentials","headers","body","map","parse","getItem","componentDidMount","location","pathname","stack","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport Results from './Results';\nimport Favorites from './Favorites';\nimport Navbar from './Navbar';\nimport Signup from './Signup';\nimport Login from './Login';\nimport './css/App.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        let favoriteList = JSON.parse(localStorage.getItem('favoriteList'));\n        if (favoriteList === null) {\n            favoriteList = [];\n            localStorage.setItem('favoriteList', JSON.stringify(favoriteList));\n        }\n        this.state = {\n            favoriteList: favoriteList,\n            json: null, \n            jsonIndex: 0,\n            searchTerm: null,\n            page: 1,\n            beerList: [],\n            displayButton: false,\n            haventSearched: true,\n            loggedIn: false,\n            firstname: ''\n        }\n    }\n\n    getAndDisplayBeers = (searchTerm) => {\n        if (searchTerm === '') {\n            return;\n        }\n        if (searchTerm === this.state.searchTerm) {\n            if (this.state.jsonIndex < this.state.json.length || this.state.json.length < 80) {\n                return;\n            }\n        }\n        fetch(`https://api.punkapi.com/v2/beers?page=${this.state.page}&per_page=80&beer_name=${searchTerm}`)\n        .then((response) => {\n          return response.json();\n        })\n        .then((json) => {\n          if (json.length === 0) {\n             return;\n          }\n          else if (searchTerm === this.state.searchTerm) {\n            this.setState({json: json,\n                           jsonIndex: 0}, () => {\n                              this.displayBeers();\n                            });\n          }\n          else {\n            this.setState({json: json,\n                           jsonIndex: 0,\n                           searchTerm: searchTerm,\n                           page: 1,\n                           beerList: null,\n                           haventSearched: false}, () => {\n                              this.displayBeers();\n                          });\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        })\n    }\n\n    displayBeers = () => {\n        let numBeers = this.state.json.length - this.state.jsonIndex;\n        if (numBeers >= 6) {\n            this.makeBeerListThenDisplay(6);\n        }\n        else if (numBeers !== 0) {\n            this.makeBeerListThenDisplay(numBeers);\n        }\n        else if (this.state.json.length === 80) {\n            this.setState({page: this.props.app.state.page + 1}, () => {\n            this.getAndDisplayBeers(this.state.searchTerm);\n            });\n        }\n        else {\n            this.setState({page: this.props.app.state.page + 1}, () => {\n            return;\n            });\n        }\n    }\n\n    makeBeerListThenDisplay = (numBeers) => {\n        let beerList = [];\n        if (this.state.beerList != null) { \n          for (let i = 0; i < this.state.beerList.length; i++) {\n              beerList.push(this.state.beerList[i]);\n          }\n        }\n        let jsonIndex = this.state.jsonIndex;\n        for (let i = 0; i < numBeers; i++) {\n            beerList.push({id: this.state.json[jsonIndex].id,\n                           img: this.state.json[jsonIndex].image_url,\n                           name: this.state.json[jsonIndex].name,\n                           description: this.state.json[jsonIndex].description});\n            jsonIndex++;               \n        }\n        this.setState({beerList: beerList, jsonIndex: jsonIndex}, () => {\n            let trueOrFalse;\n            if (this.state.jsonIndex !== this.state.json.length) {\n                trueOrFalse = true;\n            }\n            else {\n                trueOrFalse = false;\n            }\n            this.setState({displayButton: trueOrFalse}, () => {\n                this.props.history.push('/');\n            });\n        });\n    }\n\n    addToFavorites = (beer) => {\n        let favoriteList = this.state.favoriteList;\n        console.log(favoriteList);\n        let beerFound = favoriteList.find((beer1) => {\n            return beer1.id === beer.id;\n        });\n        if (!beerFound) {\n            let newFavoriteList = favoriteList;\n            newFavoriteList.push(beer);\n            localStorage.setItem('favoriteList', JSON.stringify(newFavoriteList));\n            this.setState({favoriteList: newFavoriteList});\n        }\n    }\n\n    updateFavoritesFromLogin = async(beerIDs) => {\n        let url = this.createURLForStoredBeerIDs(beerIDs);\n        let response = await fetch(url);\n        let fullInfoBeers = await response.json();\n        let favoriteList = this.state.favoriteList;\n        for (let i = 0; i < fullInfoBeers.length; i++) {\n            let beerFound = favoriteList.find((beer) => {\n                return beer.id === fullInfoBeers[i].id;\n            });\n            if (!beerFound) {\n                let newFavoriteList = favoriteList;\n                newFavoriteList.push(fullInfoBeers[i]);\n                localStorage.setItem('favoriteList', JSON.stringify(newFavoriteList));\n                this.setState({favoriteList: newFavoriteList});\n            }\n        }\n    }\n\n    createURLForStoredBeerIDs = (beerIDs) => {\n        let url = 'https://api.punkapi.com/v2/beers?ids=';\n        for (let i = 0; i < beerIDs.length; i++) {\n            if (i < beerIDs.length - 1) {\n                url += `${beerIDs[i]}|`;\n            }\n            else {\n                url += `${beerIDs[i]}`;\n            }\n        }\n        return url;\n    }\n\n    resetAndRedirect = (route, firstname) => {\n        if (firstname !== undefined) {\n            this.setState({firstname: firstname,\n                           loggedIn: true})\n        }\n        this.setState({json: null, \n                       jsonIndex: 0,\n                       searchTerm: null,\n                       page: 1,\n                       beerList: [],\n                       displayButton: false,\n                       haventSearched: true}, () => {\n                           if (route === '') {\n                               console.log('here');\n                                this.getAndDisplayBeers('beer');\n                            }\n                           this.props.history.push(`/${route}`);\n                       });\n    }\n\n    redirect = (route) => {\n        if (route === '') {\n            this.getAndDisplayBeers('beer');\n        }\n        this.props.history.push(`/${route}`);\n    }\n    \n\n    removeFromFavorites = (beer) => {\n        let favoriteList = this.state.favoriteList;\n        let beerIndex = favoriteList.findIndex((beer1) => {\n            return beer1.id === beer.id;\n        });\n        let newFavoriteList = favoriteList;\n        newFavoriteList.splice(beerIndex, 1);\n        localStorage.setItem('favoriteList', JSON.stringify(newFavoriteList));\n        this.setState({favoriteList: newFavoriteList});\n    }\n\n    signOut = async() => {\n        let res = await fetch('http://localhost:5000/favorites', {\n            method: 'PUT', \n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state.favoriteList.map((beer) => beer.id))\n        });\n        //let json = await res.json();\n    }\n\n    async componentDidMount() {\n        if (this.props.history.location.pathname === '/') {\n            if (this.state.haventSearched) {\n                this.getAndDisplayBeers('beer');\n            }\n        }\n        try {\n            let res = await fetch('http://localhost:5000/loggedin', \n                {credentials: 'include'});\n            let json = await res.json();\n            console.log(json);\n            if (json.loggedIn) {\n                this.setState({\n                    firstname: json.firstname,\n                    loggedIn: true\n                })\n            }\n        } catch(error) {\n            console.error(error.stack);\n        }\n    }\n\n    render() {\n        return (\n            <Router history={this.props.history}>\n                <Navbar getAndDisplayBeers={this.getAndDisplayBeers} favoriteNum={this.state.favoriteList.length} resetAndRedirect={this.resetAndRedirect} loggedIn={this.state.loggedIn} firstname={this.state.firstname} signOut={this.signOut}></Navbar>\n                <Switch>\n                    <Route \n                        exact path=\"/login\" \n                        render={(props) => <Login {...props} updateFavoritesFromLogin={this.updateFavoritesFromLogin} resetAndRedirect={this.resetAndRedirect}></Login>}>\n                    </Route>\n                    <Route \n                        exact path=\"/signup\" \n                        render={(props) => <Signup {...props}></Signup>}>\n                    </Route>\n                    <Route \n                        exact path=\"/\" \n                        render={(props) => \n                                <Results favoriteList={this.state.favoriteList} addToFavorites={this.addToFavorites} beerList={this.state.beerList} displayButton={this.state.displayButton} displayBeers={this.displayBeers}></Results>}>\n                    </Route>\n                    <Route \n                        path=\"/favorites\" \n                        render={(props) =>\n                                <Favorites favoriteList={this.state.favoriteList} removeFromFavorites={this.removeFromFavorites}></Favorites>}>\n                    </Route>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}