{"ast":null,"code":"var _jsxFileName = \"/Users/jorencarlson/Desktop/Programming/Big Projects/punk_beer/src/components/App.jsx\";\nimport React from 'react';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport Results from './Results';\nimport Favorites from './Favorites';\nimport Navbar from './Navbar';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAndDisplayRandomBeers = (beerCount, beerList) => {\n      if (beerCount > 0) {\n        fetch('https://api.punkapi.com/v2/beers/random').then(response => {\n          return response.json();\n        }).then(json => {\n          let beerFound = beerList.find(beer => {\n            return beer.id === json.id;\n          });\n\n          if (!beerFound) {\n            let newBeerList = beerList;\n            newBeerList.push(json);\n            this.getAndDisplayRandomBeers(beerCount - 1, newBeerList);\n          } else {\n            this.getAndDisplayRandomBeers(beerCount, newBeerList);\n          }\n        }).catch(error => {\n          console.error(error);\n        });\n      } else {\n        this.setState({\n          beerList: beerList\n        });\n      }\n    };\n\n    this.getAndDisplayBeers = searchTerm => {\n      fetch(\"https://api.punkapi.com/v2/beers?page=\".concat(this.state.page, \"&per_page=80&beer_name=\").concat(searchTerm)).then(response => {\n        return response.json();\n      }).then(json => {\n        if (this.state.json !== null) {\n          if (JSON.stringify(this.state.json) === JSON.stringify(json)) {\n            return;\n          }\n        }\n\n        if (searchTerm === this.state.searchTerm) {\n          this.setState({\n            json: json,\n            jsonIndex: 0\n          }, () => {\n            this.displayBeers();\n          });\n        } else {\n          this.setState({\n            json: json,\n            jsonIndex: 0,\n            searchTerm: searchTerm,\n            page: 1,\n            beerList: null,\n            haventSearched: false\n          }, () => {\n            this.displayBeers();\n          });\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.displayBeers = () => {\n      let numBeers = this.state.json.length - this.state.jsonIndex;\n\n      if (numBeers >= 6) {\n        this.makeBeerListThenDisplay(6);\n      } else if (numBeers !== 0) {\n        this.makeBeerListThenDisplay(numBeers);\n      } else if (this.state.json.length === 80) {\n        this.setState({\n          page: this.props.app.state.page + 1\n        }, () => {\n          this.getAndDisplayBeers(this.state.searchTerm);\n        });\n      } else {\n        this.setState({\n          page: this.props.app.state.page + 1\n        }, () => {\n          return;\n        });\n      }\n    };\n\n    this.makeBeerListThenDisplay = numBeers => {\n      let beerList = [];\n\n      if (this.state.beerList != null) {\n        for (let i = 0; i < this.state.beerList.length; i++) {\n          beerList.push(this.state.beerList[i]);\n        }\n      }\n\n      let jsonIndex = this.state.jsonIndex;\n\n      for (let i = 0; i < numBeers; i++) {\n        beerList.push({\n          id: this.state.json[jsonIndex].id,\n          img: this.state.json[jsonIndex].image_url,\n          name: this.state.json[jsonIndex].name,\n          description: this.state.json[jsonIndex].description\n        });\n        jsonIndex++;\n      }\n\n      this.setState({\n        beerList: beerList,\n        jsonIndex: jsonIndex\n      }, () => {\n        let trueOrFalse;\n\n        if (this.state.jsonIndex !== this.state.json.length) {\n          trueOrFalse = true;\n        } else {\n          trueOrFalse = false;\n        }\n\n        this.setState({\n          displayButton: trueOrFalse\n        }, () => {\n          this.props.history.push('/');\n        });\n      });\n    };\n\n    this.addToFavorites = beer => {\n      let beerFound = this.state.favoriteList.find(beer1 => {\n        return beer1.id === beer.id;\n      });\n\n      if (!beerFound) {\n        let newFavoriteList = this.state.favoriteList;\n        newFavoriteList.push(beer);\n        this.setState({\n          favoriteList: newFavoriteList\n        });\n      }\n    };\n\n    this.resetAndRedirect = route => {\n      this.setState({\n        json: null,\n        jsonIndex: 0,\n        searchTerm: null,\n        page: 1,\n        beerList: [],\n        displayButton: false,\n        haventSearched: true\n      }, () => {\n        this.props.history.push(\"/\".concat(route));\n      });\n    };\n\n    this.removeFromFavorites = beer => {\n      let beerIndex = this.state.favoriteList.findIndex(beer1 => {\n        return beer1.id === beer.id;\n      });\n      let newFavoriteList = this.state.favoriteList;\n      newFavoriteList.splice(beerIndex, 1);\n      this.setState({\n        favoriteList: newFavoriteList\n      }, () => console.log(this.state.favoriteList));\n    };\n\n    this.state = {\n      favoriteList: [],\n      json: null,\n      jsonIndex: 0,\n      searchTerm: null,\n      page: 1,\n      beerList: [],\n      displayButton: false,\n      haventSearched: true\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.history.location.pathname === '/') {\n      if (this.state.haventSearched) {\n        let beerList = [];\n        this.getAndDisplayRandomBeers(6, beerList);\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(Router, {\n      history: this.props.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Navbar, Object.assign({}, props, {\n        getAndDisplayBeers: this.getAndDisplayBeers,\n        favoriteNum: this.state.favoriteList.length,\n        resetAndRedirect: this.resetAndRedirect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(Results, {\n        favoriteList: this.state.favoriteList,\n        addToFavorites: this.addToFavorites,\n        beerList: this.state.beerList,\n        displayButton: this.state.displayButton,\n        displayBeers: this.displayBeers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/favorites\",\n      render: props => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Navbar, Object.assign({}, props, {\n        getAndDisplayBeers: this.getAndDisplayBeers,\n        favoriteNum: this.state.favoriteList.length,\n        resetAndRedirect: this.resetAndRedirect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      })), React.createElement(Favorites, {\n        favoriteList: this.state.favoriteList,\n        removeFromFavorites: this.removeFromFavorites,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jorencarlson/Desktop/Programming/Big Projects/punk_beer/src/components/App.jsx"],"names":["React","Route","Switch","Router","Results","Favorites","Navbar","App","Component","constructor","props","getAndDisplayRandomBeers","beerCount","beerList","fetch","then","response","json","beerFound","find","beer","id","newBeerList","push","catch","error","console","setState","getAndDisplayBeers","searchTerm","state","page","JSON","stringify","jsonIndex","displayBeers","haventSearched","numBeers","length","makeBeerListThenDisplay","app","i","img","image_url","name","description","trueOrFalse","displayButton","history","addToFavorites","favoriteList","beer1","newFavoriteList","resetAndRedirect","route","removeFromFavorites","beerIndex","findIndex","splice","log","componentDidMount","location","pathname","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport Results from './Results';\nimport Favorites from './Favorites';\nimport Navbar from './Navbar';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            favoriteList: [],\n            json: null, \n            jsonIndex: 0,\n            searchTerm: null,\n            page: 1,\n            beerList: [],\n            displayButton: false,\n            haventSearched: true\n        }\n    }\n\n    getAndDisplayRandomBeers = (beerCount, beerList) => {\n        if (beerCount > 0) {\n            fetch('https://api.punkapi.com/v2/beers/random')\n            .then((response) => {\n                return response.json();\n            })\n            .then((json) => {\n                let beerFound = beerList.find((beer) => {\n                    return beer.id === json.id;\n                });\n                if (!beerFound) {\n                    let newBeerList = beerList;\n                    newBeerList.push(json);\n                    this.getAndDisplayRandomBeers(beerCount - 1, newBeerList);\n                }\n                else {\n                    this.getAndDisplayRandomBeers(beerCount, newBeerList);\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n        }\n        else {\n            this.setState({beerList: beerList});\n        }\n    }\n\n    getAndDisplayBeers = (searchTerm) => {\n        fetch(`https://api.punkapi.com/v2/beers?page=${this.state.page}&per_page=80&beer_name=${searchTerm}`)\n        .then((response) => {\n          return response.json();\n        })\n        .then((json) => {\n          if (this.state.json !== null) {\n            if (JSON.stringify(this.state.json) === JSON.stringify(json)) {\n              return;\n            }\n          }\n          if (searchTerm === this.state.searchTerm) {\n            this.setState({json: json,\n                           jsonIndex: 0}, () => {\n                              this.displayBeers();\n                            });\n          }\n          else {\n            this.setState({json: json,\n                           jsonIndex: 0,\n                           searchTerm: searchTerm,\n                           page: 1,\n                           beerList: null,\n                           haventSearched: false}, () => {\n                              this.displayBeers();\n                          });\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        })\n    }\n\n    displayBeers = () => {\n        let numBeers = this.state.json.length - this.state.jsonIndex;\n        if (numBeers >= 6) {\n            this.makeBeerListThenDisplay(6);\n        }\n        else if (numBeers !== 0) {\n            this.makeBeerListThenDisplay(numBeers);\n        }\n        else if (this.state.json.length === 80) {\n            this.setState({page: this.props.app.state.page + 1}, () => {\n            this.getAndDisplayBeers(this.state.searchTerm);\n            });\n        }\n        else {\n            this.setState({page: this.props.app.state.page + 1}, () => {\n            return;\n            });\n        }\n    }\n\n    makeBeerListThenDisplay = (numBeers) => {\n        let beerList = [];\n        if (this.state.beerList != null) { \n          for (let i = 0; i < this.state.beerList.length; i++) {\n              beerList.push(this.state.beerList[i]);\n          }\n        }\n        let jsonIndex = this.state.jsonIndex;\n        for (let i = 0; i < numBeers; i++) {\n            beerList.push({id: this.state.json[jsonIndex].id,\n                           img: this.state.json[jsonIndex].image_url,\n                           name: this.state.json[jsonIndex].name,\n                           description: this.state.json[jsonIndex].description});\n            jsonIndex++;               \n        }\n        this.setState({beerList: beerList, jsonIndex: jsonIndex}, () => {\n            let trueOrFalse;\n            if (this.state.jsonIndex !== this.state.json.length) {\n                trueOrFalse = true;\n            }\n            else {\n                trueOrFalse = false;\n            }\n            this.setState({displayButton: trueOrFalse}, () => {\n                this.props.history.push('/');\n            });\n        });\n    }\n\n    addToFavorites = (beer) => {\n        let beerFound = this.state.favoriteList.find((beer1) => {\n            return beer1.id === beer.id;\n        });\n        if (!beerFound) {\n            let newFavoriteList = this.state.favoriteList;\n            newFavoriteList.push(beer);\n            this.setState({\n                favoriteList: newFavoriteList\n            });\n        }\n    }\n\n    resetAndRedirect = (route) => {\n        this.setState({json: null, \n                       jsonIndex: 0,\n                       searchTerm: null,\n                       page: 1,\n                       beerList: [],\n                       displayButton: false,\n                       haventSearched: true}, () => {\n                           this.props.history.push(`/${route}`)\n                       });\n    }\n\n    removeFromFavorites = (beer) => {\n        let beerIndex = this.state.favoriteList.findIndex((beer1) => {\n            return beer1.id === beer.id;\n        });\n        let newFavoriteList = this.state.favoriteList;\n        newFavoriteList.splice(beerIndex, 1);\n        this.setState({favoriteList: newFavoriteList}, () => console.log(this.state.favoriteList));\n    }\n\n    componentDidMount() {\n        if (this.props.history.location.pathname === '/') {\n            if (this.state.haventSearched) {\n                let beerList = [];\n                this.getAndDisplayRandomBeers(6, beerList);\n            }\n        }\n    }\n\n    render() {\n        return (\n            <Router history={this.props.history}>\n                <Switch>\n                    <Route \n                        exact path=\"/\" \n                        render={(props) => \n                            <div>\n                                <Navbar {...props} getAndDisplayBeers={this.getAndDisplayBeers} favoriteNum={this.state.favoriteList.length} resetAndRedirect={this.resetAndRedirect}></Navbar>\n                                <Results favoriteList={this.state.favoriteList} addToFavorites={this.addToFavorites} beerList={this.state.beerList} displayButton={this.state.displayButton} displayBeers={this.displayBeers}></Results>\n                            </div>}>\n                    </Route>\n                    <Route \n                        path=\"/favorites\" \n                        render={(props) =>\n                            <div>\n                                <Navbar {...props} getAndDisplayBeers={this.getAndDisplayBeers} favoriteNum={this.state.favoriteList.length} resetAndRedirect={this.resetAndRedirect}></Navbar>\n                                <Favorites favoriteList={this.state.favoriteList} removeFromFavorites={this.removeFromFavorites}></Favorites>\n                            </div>}>\n                    </Route>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}