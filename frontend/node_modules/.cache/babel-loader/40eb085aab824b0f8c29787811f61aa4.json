{"ast":null,"code":"var _jsxFileName = \"/Users/jorencarlson/Desktop/Programming/Big Projects/punk_beer/frontend/src/components/App.jsx\";\nimport React from 'react';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport Results from './Results';\nimport Favorites from './Favorites';\nimport Navbar from './Navbar';\nimport Signup from './Signup';\nimport Login from './Login';\nimport './css/App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAndDisplayBeers = searchTerm => {\n      if (searchTerm === '') {\n        return;\n      }\n\n      if (searchTerm === this.state.searchTerm) {\n        if (this.state.jsonIndex < this.state.json.length || this.state.json.length < 80) {\n          return;\n        }\n      }\n\n      fetch(\"https://api.punkapi.com/v2/beers?page=\".concat(this.state.page, \"&per_page=80&beer_name=\").concat(searchTerm)).then(response => {\n        return response.json();\n      }).then(json => {\n        if (json.length === 0) {\n          return;\n        } else if (searchTerm === this.state.searchTerm) {\n          this.setState({\n            json: json,\n            jsonIndex: 0\n          }, () => {\n            this.displayBeers();\n          });\n        } else {\n          this.setState({\n            json: json,\n            jsonIndex: 0,\n            searchTerm: searchTerm,\n            page: 1,\n            beerList: null,\n            haventSearched: false\n          }, () => {\n            this.displayBeers();\n          });\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.displayBeers = () => {\n      let numBeers = this.state.json.length - this.state.jsonIndex;\n\n      if (numBeers >= 6) {\n        this.makeBeerListThenDisplay(6);\n      } else if (numBeers !== 0) {\n        this.makeBeerListThenDisplay(numBeers);\n      } else if (this.state.json.length === 80) {\n        this.setState({\n          page: this.props.app.state.page + 1\n        }, () => {\n          this.getAndDisplayBeers(this.state.searchTerm);\n        });\n      } else {\n        this.setState({\n          page: this.props.app.state.page + 1\n        }, () => {\n          return;\n        });\n      }\n    };\n\n    this.makeBeerListThenDisplay = numBeers => {\n      let beerList = [];\n\n      if (this.state.beerList != null) {\n        for (let i = 0; i < this.state.beerList.length; i++) {\n          beerList.push(this.state.beerList[i]);\n        }\n      }\n\n      let jsonIndex = this.state.jsonIndex;\n\n      for (let i = 0; i < numBeers; i++) {\n        beerList.push({\n          id: this.state.json[jsonIndex].id,\n          img: this.state.json[jsonIndex].image_url,\n          name: this.state.json[jsonIndex].name,\n          description: this.state.json[jsonIndex].description\n        });\n        jsonIndex++;\n      }\n\n      this.setState({\n        beerList: beerList,\n        jsonIndex: jsonIndex\n      }, () => {\n        let trueOrFalse;\n\n        if (this.state.jsonIndex !== this.state.json.length) {\n          trueOrFalse = true;\n        } else {\n          trueOrFalse = false;\n        }\n\n        this.setState({\n          displayButton: trueOrFalse\n        }, () => {\n          this.props.history.push('/');\n        });\n      });\n    };\n\n    this.addToFavorites = beer => {\n      favoriteList = localStorage.getItem('favoriteList');\n\n      if (favoriteList === null) {\n        favoriteList = [];\n        localStorage.setItem('favoriteList', favoriteList);\n      }\n\n      let beerFound = favoriteList.find(beer1 => {\n        return beer1.id === beer.id;\n      });\n\n      if (!beerFound) {\n        let newFavoriteList = favoriteList;\n        newFavoriteList.push(beer);\n        localStorage.setItem('favoriteList', newFavoriteList);\n      }\n    };\n\n    this.updateFavoritesFromLogin = async beerIDs => {\n      let url = this.createURLForStoredBeerIDs(beerIDs);\n      let response = await fetch(url);\n      let fullInfoBeers = await response.json();\n      favoriteList = localStorage.getItem('favoriteList');\n\n      if (favoriteList === null) {\n        favoriteList = [];\n        localStorage.setItem('favoriteList', favoriteList);\n      }\n\n      for (let i = 0; i < fullInfoBeers.length; i++) {\n        let beerFound = favoriteList.find(beer => {\n          return beer.id === fullInfoBeers[i].id;\n        });\n\n        if (!beerFound) {\n          let newFavoriteList = this.state.favoriteList;\n          newFavoriteList.push(fullInfoBeers[i]);\n          localStorage.setItem('favoriteList', newFavoriteList);\n        }\n      }\n    };\n\n    this.createURLForStoredBeerIDs = beerIDs => {\n      let url = 'https://api.punkapi.com/v2/beers?ids=';\n\n      for (let i = 0; i < beerIDs.length; i++) {\n        if (i < beerIDs.length - 1) {\n          url += \"\".concat(beerIDs[i], \"|\");\n        } else {\n          url += \"\".concat(beerIDs[i]);\n        }\n      }\n\n      return url;\n    };\n\n    this.resetAndRedirect = route => {\n      this.setState({\n        json: null,\n        jsonIndex: 0,\n        searchTerm: null,\n        page: 1,\n        beerList: [],\n        displayButton: false,\n        haventSearched: true\n      }, () => {\n        if (route === '') {\n          this.getAndDisplayBeers('beer');\n        }\n\n        this.props.history.push(\"/\".concat(route));\n      });\n    };\n\n    this.redirect = route => {\n      if (route === '') {\n        this.getAndDisplayBeers('beer');\n      }\n\n      this.props.history.push(\"/\".concat(route));\n    };\n\n    this.favoriteNum = () => {\n      favoriteList = localStorage.getItem('favoriteList');\n\n      if (favoriteList === null) {\n        favoriteList = [];\n        localStorage.setItem('favoriteList', favoriteList);\n      }\n\n      return favoriteList.length;\n    };\n\n    this.favoriteList = () => {\n      favoriteList = localStorage.getItem('favoriteList');\n\n      if (favoriteList === null) {\n        favoriteList = [];\n        localStorage.setItem('favoriteList', favoriteList);\n      }\n\n      return favoriteList;\n    };\n\n    this.removeFromFavorites = beer => {\n      favoriteList = localStorage.getItem('favoriteList');\n\n      if (favoriteList === null) {\n        favoriteList = [];\n        localStorage.setItem('favoriteList', favoriteList);\n      }\n\n      let beerIndex = favoriteList.findIndex(beer1 => {\n        return beer1.id === beer.id;\n      });\n      let newFavoriteList = this.state.favoriteList;\n      newFavoriteList.splice(beerIndex, 1);\n      localStorage.setItem('favoriteList', newFavoriteList);\n    };\n\n    this.state = {\n      json: null,\n      jsonIndex: 0,\n      searchTerm: null,\n      page: 1,\n      beerList: [],\n      displayButton: false,\n      haventSearched: true\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.history.location.pathname === '/') {\n      if (this.state.haventSearched) {\n        this.getAndDisplayBeers('beer');\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(Router, {\n      history: this.props.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      getAndDisplayBeers: this.getAndDisplayBeers,\n      favoriteNum: this.favoriteNum(),\n      resetAndRedirect: this.resetAndRedirect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: props => React.createElement(Login, Object.assign({}, props, {\n        updateFavoritesFromLogin: this.updateFavoritesFromLogin,\n        resetAndRedirect: this.resetAndRedirect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: props => React.createElement(Signup, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Results, {\n        favoriteList: this.favoriteList(),\n        addToFavorites: this.addToFavorites,\n        beerList: this.state.beerList,\n        displayButton: this.state.displayButton,\n        displayBeers: this.displayBeers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/favorites\",\n      render: props => React.createElement(Favorites, {\n        favoriteList: this.favoriteList(),\n        removeFromFavorites: this.removeFromFavorites,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jorencarlson/Desktop/Programming/Big Projects/punk_beer/frontend/src/components/App.jsx"],"names":["React","Route","Switch","Router","Results","Favorites","Navbar","Signup","Login","App","Component","constructor","props","getAndDisplayBeers","searchTerm","state","jsonIndex","json","length","fetch","page","then","response","setState","displayBeers","beerList","haventSearched","catch","error","console","numBeers","makeBeerListThenDisplay","app","i","push","id","img","image_url","name","description","trueOrFalse","displayButton","history","addToFavorites","beer","favoriteList","localStorage","getItem","setItem","beerFound","find","beer1","newFavoriteList","updateFavoritesFromLogin","beerIDs","url","createURLForStoredBeerIDs","fullInfoBeers","resetAndRedirect","route","redirect","favoriteNum","removeFromFavorites","beerIndex","findIndex","splice","componentDidMount","location","pathname","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport Results from './Results';\nimport Favorites from './Favorites';\nimport Navbar from './Navbar';\nimport Signup from './Signup';\nimport Login from './Login';\nimport './css/App.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            json: null, \n            jsonIndex: 0,\n            searchTerm: null,\n            page: 1,\n            beerList: [],\n            displayButton: false,\n            haventSearched: true\n        }\n    }\n\n    getAndDisplayBeers = (searchTerm) => {\n        if (searchTerm === '') {\n            return;\n        }\n        if (searchTerm === this.state.searchTerm) {\n            if (this.state.jsonIndex < this.state.json.length || this.state.json.length < 80) {\n                return;\n            }\n        }\n        fetch(`https://api.punkapi.com/v2/beers?page=${this.state.page}&per_page=80&beer_name=${searchTerm}`)\n        .then((response) => {\n          return response.json();\n        })\n        .then((json) => {\n          if (json.length === 0) {\n             return;\n          }\n          else if (searchTerm === this.state.searchTerm) {\n            this.setState({json: json,\n                           jsonIndex: 0}, () => {\n                              this.displayBeers();\n                            });\n          }\n          else {\n            this.setState({json: json,\n                           jsonIndex: 0,\n                           searchTerm: searchTerm,\n                           page: 1,\n                           beerList: null,\n                           haventSearched: false}, () => {\n                              this.displayBeers();\n                          });\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        })\n    }\n\n    displayBeers = () => {\n        let numBeers = this.state.json.length - this.state.jsonIndex;\n        if (numBeers >= 6) {\n            this.makeBeerListThenDisplay(6);\n        }\n        else if (numBeers !== 0) {\n            this.makeBeerListThenDisplay(numBeers);\n        }\n        else if (this.state.json.length === 80) {\n            this.setState({page: this.props.app.state.page + 1}, () => {\n            this.getAndDisplayBeers(this.state.searchTerm);\n            });\n        }\n        else {\n            this.setState({page: this.props.app.state.page + 1}, () => {\n            return;\n            });\n        }\n    }\n\n    makeBeerListThenDisplay = (numBeers) => {\n        let beerList = [];\n        if (this.state.beerList != null) { \n          for (let i = 0; i < this.state.beerList.length; i++) {\n              beerList.push(this.state.beerList[i]);\n          }\n        }\n        let jsonIndex = this.state.jsonIndex;\n        for (let i = 0; i < numBeers; i++) {\n            beerList.push({id: this.state.json[jsonIndex].id,\n                           img: this.state.json[jsonIndex].image_url,\n                           name: this.state.json[jsonIndex].name,\n                           description: this.state.json[jsonIndex].description});\n            jsonIndex++;               \n        }\n        this.setState({beerList: beerList, jsonIndex: jsonIndex}, () => {\n            let trueOrFalse;\n            if (this.state.jsonIndex !== this.state.json.length) {\n                trueOrFalse = true;\n            }\n            else {\n                trueOrFalse = false;\n            }\n            this.setState({displayButton: trueOrFalse}, () => {\n                this.props.history.push('/');\n            });\n        });\n    }\n\n    addToFavorites = (beer) => {\n        favoriteList = localStorage.getItem('favoriteList');\n        if (favoriteList === null) {\n            favoriteList = [];\n            localStorage.setItem('favoriteList', favoriteList);\n        }\n        let beerFound = favoriteList.find((beer1) => {\n            return beer1.id === beer.id;\n        });\n        if (!beerFound) {\n            let newFavoriteList = favoriteList;\n            newFavoriteList.push(beer);\n            localStorage.setItem('favoriteList', newFavoriteList);\n        }\n    }\n\n    updateFavoritesFromLogin = async(beerIDs) => {\n        let url = this.createURLForStoredBeerIDs(beerIDs);\n        let response = await fetch(url);\n        let fullInfoBeers = await response.json();\n        favoriteList = localStorage.getItem('favoriteList');\n        if (favoriteList === null) {\n            favoriteList = [];\n            localStorage.setItem('favoriteList', favoriteList);\n        }\n        for (let i = 0; i < fullInfoBeers.length; i++) {\n            let beerFound = favoriteList.find((beer) => {\n                return beer.id === fullInfoBeers[i].id;\n            });\n            if (!beerFound) {\n                let newFavoriteList = this.state.favoriteList;\n                newFavoriteList.push(fullInfoBeers[i]);\n                localStorage.setItem('favoriteList', newFavoriteList);\n            }\n        }\n    }\n\n    createURLForStoredBeerIDs = (beerIDs) => {\n        let url = 'https://api.punkapi.com/v2/beers?ids=';\n        for (let i = 0; i < beerIDs.length; i++) {\n            if (i < beerIDs.length - 1) {\n                url += `${beerIDs[i]}|`;\n            }\n            else {\n                url += `${beerIDs[i]}`;\n            }\n        }\n        return url;\n    }\n\n    resetAndRedirect = (route) => {\n        this.setState({json: null, \n                       jsonIndex: 0,\n                       searchTerm: null,\n                       page: 1,\n                       beerList: [],\n                       displayButton: false,\n                       haventSearched: true}, () => {\n                           if (route === '') {\n                                this.getAndDisplayBeers('beer');\n                            }\n                           this.props.history.push(`/${route}`);\n                       });\n    }\n\n    redirect = (route) => {\n        if (route === '') {\n            this.getAndDisplayBeers('beer');\n        }\n        this.props.history.push(`/${route}`);\n    }\n\n    favoriteNum = () => {\n        favoriteList = localStorage.getItem('favoriteList');\n        if (favoriteList === null) {\n          favoriteList = [];\n          localStorage.setItem('favoriteList', favoriteList);\n        }\n        return favoriteList.length;\n      }\n\n    favoriteList = () => {\n        favoriteList = localStorage.getItem('favoriteList');\n        if (favoriteList === null) {\n          favoriteList = [];\n          localStorage.setItem('favoriteList', favoriteList);\n        }\n        return favoriteList;\n    }\n    \n\n    removeFromFavorites = (beer) => {\n        favoriteList = localStorage.getItem('favoriteList');\n        if (favoriteList === null) {\n            favoriteList = [];\n            localStorage.setItem('favoriteList', favoriteList);\n        }\n        let beerIndex = favoriteList.findIndex((beer1) => {\n            return beer1.id === beer.id;\n        });\n        let newFavoriteList = this.state.favoriteList;\n        newFavoriteList.splice(beerIndex, 1);\n        localStorage.setItem('favoriteList', newFavoriteList);\n    }\n\n    componentDidMount() {\n        if (this.props.history.location.pathname === '/') {\n            if (this.state.haventSearched) {\n                this.getAndDisplayBeers('beer');\n            }\n        }\n    }\n\n    render() {\n        return (\n            <Router history={this.props.history}>\n                <Navbar getAndDisplayBeers={this.getAndDisplayBeers} favoriteNum={this.favoriteNum()} resetAndRedirect={this.resetAndRedirect}></Navbar>\n                <Switch>\n                    <Route \n                        exact path=\"/login\" \n                        render={(props) => <Login {...props} updateFavoritesFromLogin={this.updateFavoritesFromLogin} resetAndRedirect={this.resetAndRedirect}></Login>}>\n                    </Route>\n                    <Route \n                        exact path=\"/signup\" \n                        render={(props) => <Signup {...props}></Signup>}>\n                    </Route>\n                    <Route \n                        exact path=\"/\" \n                        render={(props) => \n                                <Results favoriteList={this.favoriteList()} addToFavorites={this.addToFavorites} beerList={this.state.beerList} displayButton={this.state.displayButton} displayBeers={this.displayBeers}></Results>}>\n                    </Route>\n                    <Route \n                        path=\"/favorites\" \n                        render={(props) =>\n                                <Favorites favoriteList={this.favoriteList()} removeFromFavorites={this.removeFromFavorites}></Favorites>}>\n                    </Route>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}